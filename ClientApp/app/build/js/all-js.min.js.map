{"version":3,"sources":["app.module.js","app.routes.js","app.ruler.js","app.run.js","auth0-variables.js","callback/callback.component.js","case/case-list.component.js","case/case.component.js","case/create-case.component.js","bug-reporting/bug-reporting.component.js","cpt/cpt-list.component.js","cpt/cpt.component.js","disease-site/disease-site.component.js","login/login.component.js","locale/locale.component.js","icd10/icd-10.component.js","payment/payment.component.js","modality/modality.component.js","profile/profile.component.js","register/register.component.js","services/auth.service.js","services/callback.service.js","services/emi.service.js","services/login.service.js","services/register.service.js","treatment-summary/treatment-summary.component.js","invalid-subscription/invalid-subcription.component.js","build/js/all-js.min.js","modals/delete-case/delete-case.modal.js"],"names":["angular","module","Configuration","$stateProvider","$locationProvider","$urlRouterProvider","angularAuth0Provider","stateHelperProvider","init","clientID","AUTH0_CLIENT_ID","domain","AUTH0_DOMAIN","responseType","audience","redirectUri","AUTH0_CALLBACK_URL","scope","state","name","url","templateUrl","children","otherwise","config","$inject","AppController","$scope","EMIService","authService","defaultRequestHeaders","headers","Content-Type","Authorization","localStorage","getItem","getProfile","$on","GetUserProfile","Auth0ID","then","response","UserProfile","data","UserID","Id","setItem","CheckUserSubscription","ValidSubscription","$state","go","CheckFreeTrialPeriod","InFreeTrial","ShowFreeTrialBanner","GetFreeTrialPeriodAmount","FreeTrialPeriodAmmount","FreeTrialDays","catch","err","console","log","LogOut","logout","controller","run","callBackService","handleAuthentication","CallBackController","CasesController","toaster","$uibModal","ValidateAuthorization","ViewCase","CaseID","SelectedCaseID","DeleteCase","deleteSelectedCaseID","open","size","undefined","GetUserCaseList","serviceUserCaseList","UserCaseList","error","goToCaseForm","CaseController","CalculateTotalTreatmentCost","CaseCodesData","totalTreatmentCost","x","length","treatment_cost","GetGPCI","success","serviceGPCI","GPCILocality","CaseSummaryRequest","treatment_setting","locality","JSON","stringify","GetCaseCodeSummary","serviceCaseCodeSummary","CaseSummary","TotalTreatmentCost","toggleTreatmentAmount","index","action","currentRow","number_of_treatments","payment_rate","onSettingsChange","TreatmentSetting","onLocaleChange","GPCI","sData","CaseFormController","Cancel","SearchCodeGrid","multiSelect","enableRowSelection","columnDefs","field","displayName","CodeGrid","searchMPFSByCPT","SearchValue","SearchMPFSByCPT","serviceSearchedMPFSResults","onRegisterApi","gridApi","selection","on","rowSelectionChanged","row","items","getSelectedRows","rowSelectionChangedBatch","rows","codeGridApi","addedItems","Save","CaseName","CaseDescription","obj","SaveCaseToDB","code","CaseCode1","CPT1__HCPCS","push","jsonData","SaveCaseCodesToDB","RemoveCode","SelectedCodesToRemove","Code","indexOf","splice","AddCode","SelectedCPTCaseCodes","clearSelectedRows","RetreiveMPFSTotal","totalItems","pageSize","totalPages","currentPage","page","RetreivePagedMPFS","onPageChanged","BugReportingController","UserId","submitTicket","bug_description","BugReportDescription","SubmitBugReport","CPTListController","$http","ViewCPT","SelectedCPTCode","CPTListOptions","enableFiltering","CPTController","hideWageIndexTable","hideOppsData","hideWageIndexCalculations","WageIndexBtnText","selectedCPTCode","Locality","PaymentScope","GetWageIndex","serviceWageIndex","WageIndexGridOptions","ShowWageIndexTable","WageIndexGridApi","core","refresh","PerformWageIndexCalculation","WageIndexItems","geo_location","Area_Name","wage_index","Wage_Index","national_payment_rate","CurrentOPPS","Payment_Rate_","toString","state_code","State_Code","State","preliminaryAdjustmentAmount","preliminary_adjustment_amount","wageIndexAdjustedAmount","wage_index_adjusted_payment","onGPCILocaleChange","CurrentCPT","parse","oRegionalPaymentRateRequest","CPTCode","Locale","PaymentRateScope","regionalPaymentRateData","Work_RVUs","GetGlobalPaymentRate","serviceGlobalPaymentRate","PaymentRate","GlobalPaymentRate","status","pop","$timeout","$window","location","LoginRedirectLocation","GetProfessionalPaymentRate","serviceProfessionalPaymentRate","ProfessionalPaymentRate","GetTechnicalPaymentRate","serviceTrchnicalPaymentRate","TechnicalPaymentRate","GetMPFSByCPT","oNationalPaymentRateRequest","nationalPaymentRateData","TechnicalRVU","GetGlobalRVU","serviceGlobalRVU","GlobalRVU","alert","GetProfessionalRVU","serviceProfessionalRVU","ProfessionalRVU","GetTechnicalRVU","serviceTechnicalRVU","GPCILocale","LocalName","GetOPPSByCPT","serviceOPPS","CH","GetCCIByCPT","serviceCCI","CCIEditOptions","GetMUEByCPT","serviceMUE","MUEOptions","width","DiseaseSiteController","GetDiseaseSites","serviceDiseaseSites","DiseaseSites","chooseDiseaseSite","serviceChosenDiseaseSite","DiseaseSite","LoginController","LoginService","goToRegistration","AuthenticateUser","login","LocaleController","chooseSetting","serviceChosenTreatmentSetting","ICD10Controller","ICD10ListOptions","GetICD10Count","GetICD10Paged","serviceICD10PagedData","searchByICD10Code","SearchICD10","servceSearchedICD10","PaymentController","RegistrationService","createToken","stripe","card","result","cardError","message","submitting","token","Auth0Id","Auth0Identifier","Token","id","coupon_code","CouponCode","HandleStripeToken","transitionTo","stripeTokenHandler","Stripe","elements","create","style","base","color","lineHeight","fontFamily","fontSmoothing","fontSize","::placeholder","invalid","iconColor","mount","addEventListener","event","submit","ModalityController","chosenDiseaseSite","GetApplicableModalities","serviceApplicableModalities","ApplicableModalities","chooseModality","serviceChosenModalityID","Modality","UserProfileController","isValidSubscription","createSubscription","CheckUserPaymentMethod","PaymentMethodExists","CreateNewSubscription","toast","cancelSubscription","CancelUserSubscription","RegistrationController","States","Countries","Register","first_name","RegisterForm","FirstName","$viewValue","last_name","LastName","email_address","CompanyEmail","city","City","country","Country","street_address","StreetAddress","phone_number","PhoneNumber","password","Password","password_confirm","PasswordConfirm","RegisterUsers","Message","angularAuth0","$rootScope","Headers","method","BaseUrl","isAuthorized","handleUnauthorized","parseHash","authResult","accessToken","idToken","setSession","_AuthToken","$broadcast","removeItem","isAuthenticated","expiresAt","Date","getTime","cb","Error","client","userInfo","profile","sub","factory","CallBackService","_RetrieveAllMPFS","_RetreivePagedMPFS","_RetreiveMPFSTotal","_GetGlobalPaymentRate","_GetWageIndexAreas","_GetProfessionalPaymentRate","_GetTechnicalPaymentRate","_GetMPFSByCPT","_GetGlobalRVU","_GetTechnicalRVU","_GetProfessionalRVU","_GetGPCI","_GetOPPSByCPT","_GetCCIByCPT","_GetMUEByCPT","_PerformWageIndexCalculation","_SearchMPFSByCPT","_GetDiseaseSites","_GetApplicableModalities","_GetTreatmentCodesByModality","_GetUserProfile","_GetICD10Data","_GetICD10Count","_GetICD10Paged","_SearchICD10","_SaveCaseToDB","_SaveCaseCodesToDB","_GetUserCaseList","_GetCaseCodeSummary","_CancelUserSubscription","_CheckUserSubscription","_CheckUserPaymentMethod","_CreateNewSubscription","_AddUserPaymentMethod","_GetWageIndex","_CheckFreeTrialPeriod","_GetFreeTrialPeriodAmount","_DeleteCase","_SubmitBugReport","post","get","CaseId","ModalityID","apiResource","CptCodePartial","SelectedCPT","Config","serviceMPFS","RetrieveAllMPFS","serviceProfessionalPayment","serviceTechnicalPaymentRate","serviceMPFSByCPT","serviceWageIndexAreas","GetWageIndexAreas","serviceSelectedWageArea","serviceMPFSTotal","serviceTreatmentCodes","GetTreatmentCodesByModality","calculatorPrevBtnDisabled","calculatorNextBtnDisabled","calculatorCalcBtnDisabled","RegisterUser","serviceUserProfile","serviceICD10Data","GetICD10Data","serviceSearchedICD10","CurrentUserID","AddUserPaymentMethod","authorize","RegistrationServie","_HandleStripeToken","abbreviation","TreatmentCodesSummaryController","TreatmentCodes","CalculateTreatments","treatment_dollar_amount","opps_payment_rate","InvalidSubscriptionController","goToPayment","contactSupport","DeleteCaseModalController","$uibModalInstance","dismiss"],"mappings":"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","file":"all-js.min.js","sourcesContent":["(function () {\r\n\r\n    angular.module('EmediCodesApplication',\r\n        [\r\n            'ui.router',\r\n            'ui.router.stateHelper',\r\n            'ui.bootstrap',\r\n            'ui.grid',\r\n            'ui.grid.selection',\r\n            'toaster',\r\n            'auth0.auth0'\r\n        ]);\r\n\r\n})();","(function () {\r\n\r\n    angular.module('EmediCodesApplication')\r\n    .config(Configuration);\r\n\r\n    Configuration.$inject = ['$stateProvider', '$locationProvider', '$urlRouterProvider', 'angularAuth0Provider', 'stateHelperProvider'];\r\n\r\n    function Configuration($stateProvider, $locationProvider, $urlRouterProvider, angularAuth0Provider, stateHelperProvider) {\r\n        angularAuth0Provider.init({\r\n            clientID: AUTH0_CLIENT_ID,\r\n            domain: AUTH0_DOMAIN,\r\n            responseType: 'token id_token',\r\n            audience: 'https://' + AUTH0_DOMAIN + '/userinfo',\r\n            redirectUri: AUTH0_CALLBACK_URL,\r\n            scope: 'openid profile'\r\n        });\r\n\r\n        \r\n        stateHelperProvider.state({\r\n            name: 'login',\r\n            url: '/login',\r\n            templateUrl: 'ClientApp/app/login/login.component.html',\r\n        }).state({\r\n            name: 'callback',\r\n            url: '/callback',\r\n            templateUrl: 'ClientApp/app/callback/callback.component.html'\r\n        }).state({\r\n            name: 'register',\r\n            url: '/register',\r\n            templateUrl: 'ClientApp/app/register/register.component.html'\r\n        }).state({\r\n            name: 'payment',\r\n            url: '/payment',\r\n            templateUrl: 'ClientApp/app/payment/payment.component.html'\r\n        }).state({\r\n            name: 'app',\r\n            url: '/app',\r\n            templateUrl: 'ClientApp/app/app.component.html',\r\n            children: [\r\n                {\r\n                    name: 'case-list',\r\n                    url: '/case-list',\r\n                    templateUrl: 'ClientApp/app/case/case-list.component.html'\r\n                },\r\n                {\r\n                    name: 'disease-site',\r\n                    url: '/disease-site',\r\n                    templateUrl: 'ClientApp/app/disease-site/disease-site.component.html'\r\n                },\r\n                {\r\n                    name: 'cpt-list',\r\n                    url: '/cpt-list',\r\n                    templateUrl: 'ClientApp/app/cpt/cpt-list.component.html'\r\n                },\r\n                {\r\n                    name: 'icd-10',\r\n                    url: '/icd-10',\r\n                    templateUrl: 'ClientApp/app/icd10/icd-10.component.html'\r\n                },\r\n                {\r\n                    name: 'cpt',\r\n                    url: '/cpt',\r\n                    templateUrl: 'ClientApp/app/cpt/cpt.component.html'\r\n                },\r\n                {\r\n                    name: 'create-case',\r\n                    url: '/create-case',\r\n                    templateUrl: 'ClientApp/app/case/create-case.component.html'\r\n                },\r\n                {\r\n                    name: 'case',\r\n                    url: '/case',\r\n                    templateUrl: 'ClientApp/app/case/case.component.html'\r\n                },\r\n                {\r\n                    name: 'modality',\r\n                    url: '/modality',\r\n                    templateUrl: 'ClientApp/app/modality/modality.component.html'\r\n                },\r\n                {\r\n                    name: 'locale',\r\n                    url: '/locale',\r\n                    templateUrl: 'ClientApp/app/locale/locale.component.html'\r\n                },\r\n                {\r\n                    name: 'treatment-summary',\r\n                    url: '/treatment-summary',\r\n                    templateUrl: 'ClientApp/app/treatment-summary/treatment-summary.component.html'\r\n                },\r\n                {\r\n                    name: 'profile',\r\n                    url: '/profile',\r\n                    templateUrl: 'ClientApp/app/profile/profile.component.html'\r\n                },\r\n                {\r\n                    name: 'bugs',\r\n                    url: '/bugs',\r\n                    templateUrl: 'ClientApp/app/bug-reporting/bug-reporting.component.html'\r\n                },\r\n                {\r\n                    name: 'invalid-subscription',\r\n                    url: '/invalid-subscription',\r\n                    templateUrl: 'ClientApp/app/invalid-subscription/invalid-subscription.component.html'\r\n                }\r\n            ]\r\n        });\r\n\r\n        $urlRouterProvider.otherwise('/login');\r\n\r\n    }\r\n       \r\n\r\n})();","(function(){\r\n\r\n    angular.module('EmediCodesApplication')\r\n    .controller('AppCtrl', AppController);\r\n\r\n    AppController.$inject = ['$scope', 'EMIService', 'authService'];\r\n\r\n    function AppController($scope, EMIService, authService) {\r\n        var defaultRequestHeaders = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n            }\r\n        };\r\n\r\n        authService.getProfile();\r\n\r\n        $scope.$on('Auth0IDSet', function(){\r\n            EMIService.GetUserProfile(EMIService.Auth0ID, defaultRequestHeaders)\r\n            .then(function(response){\r\n                $scope.UserProfile = response.data;\r\n                EMIService.UserID = response.data.Id;\r\n                localStorage.setItem('UserID', EMIService.UserID);\r\n\r\n                EMIService.CheckUserSubscription(EMIService.UserID, defaultRequestHeaders)\r\n                .then(function(response){\r\n                    localStorage.setItem('ValidSubscription', response.data.ValidSubscription);\r\n                    if(!response.data.ValidSubscription)\r\n                        $state.go('app.invalid-subscription');\r\n                });\r\n\r\n                EMIService.CheckFreeTrialPeriod(EMIService.UserID, defaultRequestHeaders)\r\n                .then(function(response){\r\n                    localStorage.setItem('InFreeTrialPeriod', response.data.InFreeTrial);\r\n                    if(response.data.InFreeTrial){\r\n                        $scope.ShowFreeTrialBanner = response.data.InFreeTrial;\r\n\r\n                        EMIService.GetFreeTrialPeriodAmount(EMIService.UserID, defaultRequestHeaders)\r\n                        .then(function(response){\r\n                            $scope.FreeTrialPeriodAmmount = response.data.FreeTrialDays;\r\n                        }).catch(function(err){\r\n                            console.log(err);\r\n                        });\r\n                    }  \r\n                });\r\n\r\n        \r\n            });\r\n        });\r\n\r\n        $scope.LogOut = function(){\r\n            authService.logout();\r\n        };\r\n       \r\n    }\r\n\r\n})();","(function () {\r\n    \r\n        'use strict';\r\n    \r\n        angular\r\n            .module('EmediCodesApplication')\r\n            .run(run);\r\n    \r\n        run.$inject = ['callBackService'];\r\n    \r\n        function run(callBackService) {\r\n            // Handle the authentication\r\n            // result in the hash\r\n            callBackService.handleAuthentication();\r\n        }\r\n    \r\n    })();","var AUTH0_CLIENT_ID='0EZIcV269TVtr86Ir8ndhr12lmduGkzB'; \r\nvar AUTH0_DOMAIN='emedicodes.auth0.com'; \r\nvar AUTH0_CALLBACK_URL ='https://www.app.emedicodes.com/#/callback';","(function(){\r\n\r\n    angular.module('EmediCodesApplication')\r\n    .controller('CallBackCtrl', CallBackController);\r\n\r\n    CallBackController.$inject = ['$scope', '$state', 'callBackService'];\r\n\r\n    function CallBackController($scope, $state, callBackService) {\r\n        callBackService.handleAuthentication();\r\n    }\r\n\r\n})();","(function () {\r\n    \r\n        angular.module('EmediCodesApplication')\r\n            .controller('CasesCtrl', CasesController);\r\n    \r\n        CasesController.$inject = ['$scope', 'EMIService', '$state', 'authService', 'toaster', '$uibModal'];\r\n    \r\n        function CasesController($scope, EMIService, $state, authService, toaster, $uibModal) {\r\n            var defaultRequestHeaders = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n                }\r\n            };\r\n    \r\n            authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n    \r\n            var UserID = localStorage.getItem('UserID');\r\n    \r\n            $scope.ViewCase = function(CaseID) {\r\n                EMIService.SelectedCaseID = CaseID;\r\n                $state.go('app.case');\r\n            };\r\n\r\n            $scope.DeleteCase = function(CaseID){\r\n\r\n                EMIService.deleteSelectedCaseID = CaseID;\r\n\r\n                var modalInstance = $uibModal.open({\r\n                    size: 'md',\r\n                    templateUrl: 'ClientApp/app/modals/delete-case/delete-case.modal.html',\r\n                    controller: 'DeleteCaseModalCtrl'\r\n                });\r\n\r\n            };\r\n\r\n            if(UserID !== null || UserID !== undefined){\r\n                EMIService.GetUserCaseList(UserID, defaultRequestHeaders)\r\n                .then(function (response) {\r\n                    EMIService.serviceUserCaseList = response;\r\n                    $scope.UserCaseList = EMIService.serviceUserCaseList.data;\r\n                }).catch(function (error) {\r\n                    toaster.error(error);\r\n                });\r\n            }\r\n\r\n            EMIService.GetUserCaseList(UserID, defaultRequestHeaders)\r\n            .then(function (response) {\r\n                EMIService.serviceUserCaseList = response;\r\n                $scope.UserCaseList = EMIService.serviceUserCaseList.data;\r\n            }).catch(function (error) {\r\n                toaster.error(error);\r\n            });\r\n\r\n            $scope.goToCaseForm = function () {\r\n                $state.go('app.create-case');\r\n            };\r\n        }\r\n    \r\n    })();","(function () {\r\n    \r\n        angular.module('EmediCodesApplication')\r\n            .controller('CaseCtrl', CaseController);\r\n    \r\n        CaseController.$inject = ['$scope', 'authService', 'EMIService', '$state', 'toaster'];\r\n    \r\n        function CaseController($scope, authService, EMIService, $state, toaster) {\r\n            var defaultRequestHeaders = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n                }\r\n            };\r\n    \r\n            authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n    \r\n            var CaseID = EMIService.SelectedCaseID;\r\n    \r\n            EMIService.GetGPCI(defaultRequestHeaders)\r\n                .success(function (response) {\r\n                    EMIService.serviceGPCI = response;\r\n                    $scope.GPCILocality = EMIService.serviceGPCI;\r\n                }).catch(function (error) {\r\n                    toaster.error(error);\r\n                });\r\n    \r\n            $scope.CaseSummaryRequest = {\r\n                treatment_setting: \"Hospital\",\r\n                locality: \"National\",\r\n                scope: \"National\"\r\n            };\r\n    \r\n            var data = JSON.stringify($scope.CaseSummaryRequest);\r\n    \r\n            $scope.treatment_cost = 0;\r\n    \r\n            EMIService.GetCaseCodeSummary(CaseID, data, defaultRequestHeaders)\r\n                .then(function (response) {\r\n                    EMIService.serviceCaseCodeSummary = response;\r\n                    $scope.CaseSummary = EMIService.serviceCaseCodeSummary.data;\r\n                    $scope.TotalTreatmentCost = CalculateTotalTreatmentCost($scope.CaseSummary);\r\n                }).catch(function (error) {\r\n                    toaster.error(error);\r\n                });\r\n    \r\n            $scope.toggleTreatmentAmount = function (index, action) {\r\n                var currentRow = $scope.CaseSummary[index];\r\n                if (action === \"plus\") {\r\n                    currentRow.number_of_treatments++;\r\n                    currentRow.treatment_cost = currentRow.payment_rate * currentRow.number_of_treatments;\r\n                    $scope.CaseSummary[index] = currentRow;\r\n                    $scope.TotalTreatmentCost = CalculateTotalTreatmentCost($scope.CaseSummary);\r\n                }\r\n                else if (action === \"minus\") {\r\n                    currentRow.treatment_cost = currentRow.treatment_cost - currentRow.payment_rate;\r\n                    currentRow.number_of_treatments--;\r\n                    $scope.CaseSummary[index] = currentRow;\r\n                    $scope.TotalTreatmentCost = CalculateTotalTreatmentCost($scope.CaseSummary);\r\n                }\r\n            };\r\n    \r\n            function CalculateTotalTreatmentCost(CaseCodesData){\r\n                var totalTreatmentCost = 0;\r\n    \r\n                for(var x=0; x<CaseCodesData.length; x++){\r\n                    totalTreatmentCost = totalTreatmentCost + CaseCodesData[x].treatment_cost;\r\n                }\r\n    \r\n                return totalTreatmentCost;\r\n            }\r\n    \r\n            $scope.onSettingsChange = function(){\r\n                $scope.CaseSummaryRequest.treatment_setting = $scope.TreatmentSetting;\r\n    \r\n                var data = JSON.stringify($scope.CaseSummaryRequest);\r\n    \r\n                EMIService.GetCaseCodeSummary(CaseID, data, defaultRequestHeaders)\r\n                .then(function (response) {\r\n                    EMIService.serviceCaseCodeSummary = response;\r\n                    $scope.CaseSummary = EMIService.serviceCaseCodeSummary.data;\r\n                }).catch(function (error) {\r\n                    toaster.error(error);\r\n                });\r\n            };\r\n    \r\n            $scope.onLocaleChange = function () {\r\n                if ($scope.GPCI === \"NATIONAL\") {\r\n                    $scope.CaseSummaryRequest.locality = \"National\";\r\n                    $scope.CaseSummaryRequest.scope = \"National\";\r\n    \r\n                    var data = JSON.stringify($scope.CaseSummaryRequest);\r\n    \r\n                    EMIService.GetCaseCodeSummary(CaseID, data, defaultRequestHeaders)\r\n                        .then(function (response) {\r\n                            EMIService.serviceCaseCodeSummary = response;\r\n                            $scope.CaseSummary = EMIService.serviceCaseCodeSummary.data;\r\n                        }).catch(function (error) {\r\n                            toaster.error(error);\r\n                        });\r\n                }\r\n                else {\r\n                    if($scope.CaseSummaryRequest.treatment_setting === \"Hospital\"){\r\n                        toaster.error('Please choose a different setting to change the location');\r\n                    }\r\n                    else{\r\n                        $scope.CaseSummaryRequest.locality = $scope.GPCI;\r\n                        $scope.CaseSummaryRequest.scope = \"Regional\";\r\n        \r\n                        var sData = JSON.stringify($scope.CaseSummaryRequest);\r\n        \r\n                        EMIService.GetCaseCodeSummary(CaseID, sData, defaultRequestHeaders)\r\n                            .then(function (response) {\r\n                                EMIService.serviceCaseCodeSummary = response;\r\n                                $scope.CaseSummary = EMIService.serviceCaseCodeSummary.data;\r\n                            }).catch(function (error) {\r\n                                toaster.error(error);\r\n                            });\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    \r\n    })();","(function(){\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .controller('CaseFormCtrl', CaseFormController);\r\n    \r\n        CaseFormController.$inject = ['$scope', 'EMIService', 'authService', '$state', 'toaster'];\r\n    \r\n        function CaseFormController($scope, EMIService, authService, $state, toaster) {\r\n            \r\n            var defaultRequestHeaders = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n                }\r\n            };\r\n    \r\n            authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n    \r\n            $scope.Cancel = function(){\r\n                $state.go('CaseList');\r\n            };\r\n    \r\n            $scope.SearchCodeGrid = {\r\n                multiSelect: true,\r\n                enableRowSelection: true,\r\n                columnDefs: [\r\n                    { field: 'CPT1__HCPCS', displayName: 'HCPCS/CPT' },\r\n                    { field: 'Description', displayName: 'Description' }\r\n                ],\r\n            };\r\n    \r\n            $scope.CodeGrid = {\r\n                multiSelect: true,\r\n                enableRowSelection: true,\r\n                columnDefs: [\r\n                    { field: 'CPT1__HCPCS', displayName: 'HCPCS/CPT' },\r\n                    { field: 'Description', displayName: 'Description' }\r\n                ],\r\n            };\r\n    \r\n            $scope.searchMPFSByCPT = function() {\r\n                if($scope.SearchValue === null || $scope.SearchValue === undefined){\r\n                    toaster.error('Please input a CPT code or partial CPT code.');\r\n                }else{\r\n                    EMIService.SearchMPFSByCPT($scope.SearchValue, defaultRequestHeaders)\r\n                    .then(function(response){\r\n                        EMIService.serviceSearchedMPFSResults = response;\r\n                        $scope.SearchCodeGrid.data = EMIService.serviceSearchedMPFSResults.data;\r\n                    });\r\n                }\r\n            };\r\n    \r\n            $scope.SearchCodeGrid.onRegisterApi = function (gridApi) {\r\n                //set gridApi on scope\r\n                $scope.gridApi = gridApi;\r\n                gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                    $scope.items = $scope.gridApi.selection.getSelectedRows();\r\n                });\r\n        \r\n                gridApi.selection.on.rowSelectionChangedBatch($scope, function (rows) {\r\n                    var msg = 'rows changed ' + rows.length;\r\n                    //$log.log(msg);\r\n                });\r\n            };\r\n    \r\n            $scope.CodeGrid.onRegisterApi = function (codeGridApi) {\r\n                //set gridApi on scope\r\n                $scope.codeGridApi = codeGridApi;\r\n                codeGridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                    $scope.addedItems = $scope.codeGridApi.selection.getSelectedRows();\r\n                });\r\n        \r\n                codeGridApi.selection.on.rowSelectionChangedBatch($scope, function (rows) {\r\n                    var msg = 'rows changed ' + rows.length;\r\n                    //$log.log(msg);\r\n                });\r\n            };\r\n    \r\n            $scope.Save = function(){\r\n                if($scope.CaseName === \"\" || $scope.CaseName === undefined){\r\n                    toaster.error('Please enter a case name.');\r\n                }\r\n                if($scope.CaseDescription === '' || $scope.CaseDescription === undefined){\r\n                    toaster.error('Please enter a case description.');\r\n                }\r\n                if($scope.CodeGrid.data.length === 0 || $scope.CodeGrid.data === null){\r\n                    toaster.error('Please select codes to add to your case');\r\n                }\r\n    \r\n                var obj = {};\r\n                var UserID = localStorage.getItem('UserID');\r\n    \r\n                obj.UserID = UserID;\r\n                obj.CaseName = $scope.CaseName;\r\n                obj.CaseDescription = $scope.CaseDescription;\r\n               \r\n                var data = JSON.stringify(obj);\r\n    \r\n                EMIService.SaveCaseToDB(data, defaultRequestHeaders)\r\n                .then(function(response){\r\n                    var CaseID = response.data.CaseID;\r\n    \r\n                    var data = [];\r\n    \r\n                    for(var x=0; x<$scope.CodeGrid.data.length; x++){\r\n                        code = {\"CaseCode1\": $scope.CodeGrid.data[x].CPT1__HCPCS};\r\n                        data.push(code);\r\n                    }\r\n    \r\n                    var jsonData = JSON.stringify(data);\r\n    \r\n                    EMIService.SaveCaseCodesToDB(jsonData, CaseID, defaultRequestHeaders)\r\n                    .then(function(response){\r\n                        toaster.success('Case successfully saved');\r\n                        $state.go('app.case-list');\r\n                    });\r\n                }).catch(function(error){\r\n                    toaster.error(error);\r\n                });\r\n    \r\n            };\r\n    \r\n            $scope.RemoveCode = function(){\r\n                EMIService.SelectedCodesToRemove = $scope.addedItems;\r\n    \r\n                for(var x=0; x<EMIService.SelectedCodesToRemove.length; x++){\r\n                    var Code = EMIService.SelectedCodesToRemove[x];\r\n                    var index = $scope.CodeGrid.data.indexOf(Code);\r\n                    $scope.CodeGrid.data.splice(index,1);\r\n                }\r\n    \r\n            };\r\n    \r\n            $scope.AddCode = function () {\r\n                EMIService.SelectedCPTCaseCodes = $scope.items;\r\n    \r\n                for(var x=0; x < EMIService.SelectedCPTCaseCodes.length; x++){\r\n                    $scope.CodeGrid.data.push(EMIService.SelectedCPTCaseCodes[x]);\r\n                }\r\n    \r\n                $scope.gridApi.selection.clearSelectedRows();\r\n            };\r\n    \r\n            EMIService.RetreiveMPFSTotal(defaultRequestHeaders)\r\n            .then(function(response){\r\n                $scope.totalItems = response.data;\r\n        \r\n                $scope.pageSize = 100;\r\n                $scope.totalPages = $scope.totalItems / $scope.pageSize;\r\n                $scope.currentPage = 1;\r\n        \r\n                var obj = {};\r\n                obj.page = $scope.currentPage;\r\n                obj.pageSize = $scope.pageSize;\r\n        \r\n                var data = JSON.stringify(obj);\r\n        \r\n                EMIService.RetreivePagedMPFS(data, defaultRequestHeaders)\r\n                .then(function(response){\r\n                    $scope.SearchCodeGrid.data = response.data;\r\n                });\r\n            });\r\n\r\n            $scope.onPageChanged = function(){\r\n                var obj = {};\r\n                obj.page = $scope.currentPage;\r\n                obj.pageSize = $scope.pageSize;\r\n        \r\n                var data = JSON.stringify(obj);\r\n        \r\n                EMIService.RetreivePagedMPFS(data, defaultRequestHeaders)\r\n                .then(function(response){\r\n                    $scope.SearchCodeGrid.data = response.data;\r\n                });\r\n            };\r\n        }\r\n    \r\n    })();","( function(){\r\n\r\n    angular.module('EmediCodesApplication')\r\n    .controller('BugReportCtrl', BugReportingController);\r\n\r\n    BugReportingController.$inject = ['$scope', 'authService', 'EMIService', 'toaster'];\r\n\r\n    function BugReportingController($scope, authService, EMIService, toaster) {\r\n        var defaultRequestHeaders = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n            }\r\n        };\r\n    \r\n        authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n\r\n        var UserId = localStorage.getItem('UserID');\r\n        \r\n        $scope.submitTicket = function(){\r\n            var obj = {};\r\n            obj.bug_description = $scope.BugReportDescription;\r\n\r\n            var data = JSON.stringify(obj);\r\n\r\n            EMIService.SubmitBugReport(UserId, defaultRequestHeaders, data)\r\n            .then(function(response){\r\n                $scope.BugReportDescription = \"\";\r\n                toaster.success('Your Ticket Has Been Submitted.');\r\n            }).catch(function(err){\r\n                toaster.error(err);\r\n            });\r\n        };\r\n    }\r\n\r\n})();","(function(){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .controller('CPTListCtrl', CPTListController);\r\n    \r\n        CPTListController.$inject = ['$scope', '$state', '$http', 'toaster', 'EMIService', 'authService'];\r\n    \r\n        function CPTListController ($scope, $state, $http, toaster, EMIService, authService) {\r\n            var defaultRequestHeaders = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n                }\r\n            };\r\n        \r\n            authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n    \r\n            var UserId = localStorage.getItem('UserID');\r\n    \r\n            EMIService.CheckUserSubscription(UserId, defaultRequestHeaders)\r\n            .then(function(response){\r\n                localStorage.setItem('ValidSubscription', response.ValidSubscription);\r\n                if(!response.data.ValidSubscription)\r\n                    $state.go('InvalidSubscription');\r\n            });\r\n        \r\n            $scope.ViewCPT = function () {\r\n                if ($scope.items != undefined) {\r\n                    localStorage.setItem('currentCPTCode', $scope.items[0].CPT1__HCPCS);            \r\n                    EMIService.SelectedCPTCode = localStorage.getItem('currentCPTCode');\r\n                    $state.go('app.cpt');\r\n                }\r\n                else {\r\n                    toaster.error('Error', 'Please select a CPT code.');\r\n                }\r\n            };\r\n    \r\n            EMIService.RetreiveMPFSTotal(defaultRequestHeaders)\r\n            .then(function(response){\r\n                $scope.totalItems = response.data;\r\n        \r\n                $scope.pageSize = 200;\r\n                $scope.totalPages = $scope.totalItems / $scope.pageSize;\r\n                $scope.currentPage = 1;\r\n        \r\n                var obj = {};\r\n                obj.page = $scope.currentPage;\r\n                obj.pageSize = $scope.pageSize;\r\n        \r\n                var data = JSON.stringify(obj);\r\n        \r\n                EMIService.RetreivePagedMPFS(data, defaultRequestHeaders)\r\n                .then(function(response){\r\n                    $scope.CPTListOptions.data = response.data;\r\n                });\r\n            });\r\n        \r\n            $scope.onPageChanged = function(){\r\n                var obj = {};\r\n                obj.page = $scope.currentPage;\r\n                obj.pageSize = $scope.pageSize;\r\n        \r\n                var data = JSON.stringify(obj);\r\n        \r\n                EMIService.RetreivePagedMPFS(data, defaultRequestHeaders)\r\n                .then(function(response){\r\n                    $scope.CPTListOptions.data = response.data;\r\n                });\r\n            };\r\n        \r\n            $scope.searchMPFSByCPT = function() {\r\n                if($scope.SearchValue === null || $scope.SearchValue === undefined){\r\n                    toaster.error('Please input a CPT code or partial CPT code.');\r\n                }else{\r\n                    EMIService.SearchMPFSByCPT($scope.SearchValue, defaultRequestHeaders)\r\n                    .then(function(response){\r\n                        EMIService.serviceSearchedMPFSResults = response;\r\n                        $scope.CPTListOptions.data = EMIService.serviceSearchedMPFSResults.data;\r\n                    });\r\n                }\r\n            };\r\n    \r\n            $scope.CPTListOptions = {\r\n                multiSelect: false,\r\n                enableFiltering: true,\r\n                enableRowSelection: true,\r\n                columnDefs: [\r\n                    { field: 'CPT1__HCPCS', displayName: 'HCPCS/CPT' },\r\n                    { field: 'Mod', displayName: 'Mod' },\r\n                    { field: 'Status', displayName: 'Status' },\r\n                    { field: 'Description', displayName: 'Description' }\r\n                ],\r\n        \r\n            };\r\n        \r\n            $scope.CPTListOptions.onRegisterApi = function (gridApi) {\r\n                //set gridApi on scope\r\n                $scope.gridApi = gridApi;\r\n                gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                    $scope.items = $scope.gridApi.selection.getSelectedRows();\r\n                });\r\n        \r\n                gridApi.selection.on.rowSelectionChangedBatch($scope, function (rows) {\r\n                    var msg = 'rows changed ' + rows.length;\r\n                    //$log.log(msg);\r\n                });\r\n            };\r\n        }\r\n    \r\n    })();\r\n    ","(function(){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .controller('CPTCtrl', CPTController);\r\n    \r\n        CPTController.$inject = ['$scope', '$state', '$http', 'EMIService', 'authService', 'toaster'];\r\n    \r\n        function CPTController ($scope, $state, $http, EMIService, authService, toaster) {\r\n            var defaultRequestHeaders = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n                }\r\n            };\r\n        \r\n            authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n    \r\n            var UserId = localStorage.getItem('UserID');\r\n    \r\n            EMIService.CheckUserSubscription(UserId, defaultRequestHeaders)\r\n            .then(function(response){\r\n                localStorage.setItem('ValidSubscription', response.ValidSubscription);\r\n                if(!response.data.ValidSubscription)\r\n                    $state.go('InvalidSubscription');\r\n            });\r\n        \r\n            $scope.hideWageIndexTable = true;\r\n            $scope.hideOppsData = false;\r\n            $scope.hideWageIndexCalculations = true;\r\n            $scope.WageIndexBtnText = \"Calculate Wage Index Adjusted Payment\";\r\n        \r\n            var selectedCPTCode;\r\n        \r\n            if(EMIService.SelectedCPTCode === null || EMIService.SelectedCPTCode === undefined){\r\n                selectedCPTCode = localStorage.getItem('currentCPTCode');\r\n            }\r\n            else{\r\n                selectedCPTCode = EMIService.SelectedCPTCode;\r\n            }\r\n        \r\n            var Locality = \"\";\r\n            $scope.PaymentScope = \"National\";\r\n                  \r\n            EMIService.GetWageIndex(defaultRequestHeaders)\r\n            .then(function(response){\r\n                EMIService.serviceWageIndex = response;\r\n                $scope.WageIndexGridOptions.data = EMIService.serviceWageIndex.data;\r\n            });\r\n        \r\n            $scope.ShowWageIndexTable = function(){\r\n                \r\n                $scope.hideWageIndexTable = false;\r\n                $scope.hideOppsData = true;\r\n                $scope.WageIndexBtnText = \"Perform Adjusted Payment Calculation\";\r\n                $scope.hideWageIndexCalculations = true;\r\n        \r\n                $scope.WageIndexGridApi.core.refresh();\r\n            };\r\n        \r\n            $scope.PerformWageIndexCalculation = function() {\r\n                if ($scope.items != undefined && $scope.items.length != 0) {\r\n                    var WageIndexItems = $scope.items[0];\r\n        \r\n                    var obj = {};\r\n        \r\n                    obj.geo_location = WageIndexItems.Area_Name;\r\n                    obj.wage_index = WageIndexItems.Wage_Index;\r\n                    obj.national_payment_rate = $scope.CurrentOPPS.Payment_Rate_.toString();\r\n                    obj.state_code = WageIndexItems.State_Code;\r\n                    obj.state = WageIndexItems.State;\r\n        \r\n                    var data = JSON.stringify(obj);\r\n        \r\n                    EMIService.PerformWageIndexCalculation(data, defaultRequestHeaders)\r\n                    .then(function(response){\r\n                        $scope.preliminaryAdjustmentAmount = response.data.preliminary_adjustment_amount;\r\n                        $scope.wageIndexAdjustedAmount = response.data.wage_index_adjusted_payment;\r\n                        $scope.hideWageIndexCalculations = false;\r\n                        $scope.hideWageIndexTable = true;\r\n                        $scope.hideOppsData = false;\r\n                    });\r\n                }\r\n                else {\r\n                    toaster.error('Error', 'Please select a wage index area.');\r\n                }\r\n            };\r\n        \r\n            $scope.onGPCILocaleChange = function () {\r\n                Locality = $scope.GPCILocality;\r\n                $scope.PaymentScope = Locality;\r\n                var CurrentCPT = JSON.parse(localStorage.getItem(\"currentCPTCode\"));\r\n        \r\n                if (Locality === \"NATIONAL\") {\r\n                    var oRegionalPaymentRateRequest = {\r\n                        CPTCode: selectedCPTCode,\r\n                        Locale: Locality,\r\n                        PaymentRateScope: \"National\"\r\n                    };\r\n                } else {\r\n                     oRegionalPaymentRateRequest = {\r\n                        CPTCode: selectedCPTCode,\r\n                        Locale: Locality,\r\n                        PaymentRateScope: \"Regional\"\r\n                    };\r\n                }\r\n        \r\n                var regionalPaymentRateData = JSON.stringify(oRegionalPaymentRateRequest);\r\n        \r\n                if (CurrentCPT.length === 1) {\r\n                    if (CurrentCPT[0].Work_RVUs !== \"0\") {\r\n        \r\n                        EMIService.GetGlobalPaymentRate(regionalPaymentRateData, defaultRequestHeaders)\r\n                            .success(function (response) {\r\n                                EMIService.serviceGlobalPaymentRate = response.PaymentRate;\r\n                                $scope.GlobalPaymentRate = EMIService.serviceGlobalPaymentRate;\r\n                            }).error(function (status, config, error) {\r\n                                switch (status) {\r\n                                    case 401: {\r\n                                        toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                        $timeout(3000);\r\n                                        $window.location = LoginRedirectLocation;\r\n                                        break;\r\n                                    }\r\n                                    case 500: {\r\n                                        toaster.pop('error', 'Internal Server Error');\r\n                                    }\r\n                                }\r\n                            });\r\n        \r\n                        EMIService.GetProfessionalPaymentRate(regionalPaymentRateData, defaultRequestHeaders)\r\n                            .success(function (response) {\r\n                                EMIService.serviceProfessionalPaymentRate = response.PaymentRate;\r\n                                $scope.ProfessionalPaymentRate = EMIService.serviceProfessionalPaymentRate;\r\n                            }).error(function (status, config, error) {\r\n                                switch (status) {\r\n                                    case 401: {\r\n                                        toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                        $timeout(3000);\r\n                                        $window.location = LoginRedirectLocation;\r\n                                        break;\r\n                                    }\r\n                                    case 500: {\r\n                                        toaster.pop('error', 'Internal Server Error');\r\n                                    }\r\n                                }\r\n                            });\r\n        \r\n                    } else {\r\n                        EMIService.GetGlobalPaymentRate(regionalPaymentRateData, defaultRequestHeaders)\r\n                            .success(function (response) {\r\n                                EMIService.serviceGlobalPaymentRate = response.PaymentRate;\r\n                                $scope.GlobalPaymentRate = EMIService.serviceGlobalPaymentRate;\r\n                            }).error(function (status, config, error) {\r\n                                switch (status) {\r\n                                    case 401: {\r\n                                        toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                        $timeout(3000);\r\n                                        $window.location = LoginRedirectLocation;\r\n                                        break;\r\n                                    }\r\n                                    case 500: {\r\n                                        toaster.pop('error', 'Internal Server Error');\r\n                                    }\r\n                                }\r\n                            });\r\n        \r\n                        EMIService.GetTechnicalPaymentRate(regionalPaymentRateData, defaultRequestHeaders)\r\n                            .success(function (response) {\r\n                                EMIService.serviceTrchnicalPaymentRate = response.PaymentRate;\r\n                                $scope.TechnicalPaymentRate = EMIService.serviceTrchnicalPaymentRate;\r\n                            }).catch(function (error) {\r\n                                switch (status) {\r\n                                    case 401: {\r\n                                        toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                        $timeout(3000);\r\n                                        $window.location = LoginRedirectLocation;\r\n                                        break;\r\n                                    }\r\n                                    case 500: {\r\n                                        toaster.pop('error', 'Internal Server Error');\r\n                                    }\r\n                                }\r\n                        });\r\n        \r\n                        \r\n                    }\r\n                } else {\r\n                    EMIService.GetGlobalPaymentRate(regionalPaymentRateData, defaultRequestHeaders)\r\n                        .success(function (response) {\r\n                            EMIService.serviceGlobalPaymentRate = response.PaymentRate;\r\n                            $scope.GlobalPaymentRate = EMIService.serviceGlobalPaymentRate;\r\n                        }).error(function (status, config, error) {\r\n                            switch (status) {\r\n                                case 401: {\r\n                                    toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                    $timeout(3000);\r\n                                    $window.location = LoginRedirectLocation;\r\n                                    break;\r\n                                }\r\n                                case 500: {\r\n                                    toaster.pop('error', 'Internal Server Error');\r\n                                }\r\n                            }\r\n                        });\r\n        \r\n                    EMIService.GetTechnicalPaymentRate(regionalPaymentRateData, defaultRequestHeaders)\r\n                        .success(function (response) {\r\n                            EMIService.serviceTrchnicalPaymentRate = response.PaymentRate;\r\n                            $scope.TechnicalPaymentRate = EMIService.serviceTrchnicalPaymentRate;\r\n                        }).catch(function (error) {\r\n                            switch (status) {\r\n                                case 401: {\r\n                                    toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                    $timeout(3000);\r\n                                    $window.location = LoginRedirectLocation;\r\n                                    break;\r\n                                }\r\n                                case 500: {\r\n                                    toaster.pop('error', 'Internal Server Error');\r\n                                    break;\r\n                                }\r\n                            }\r\n                        });\r\n        \r\n                    EMIService.GetProfessionalPaymentRate(regionalPaymentRateData, defaultRequestHeaders)\r\n                    .success(function (response) {\r\n                        EMIService.serviceProfessionalPaymentRate = response.PaymentRate;\r\n                        $scope.ProfessionalPaymentRate = EMIService.serviceProfessionalPaymentRate;\r\n                    }).error(function (status, config, error) {\r\n                        switch (status) {\r\n                            case 401: {\r\n                                toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                $timeout(3000);\r\n                                $window.location = LoginRedirectLocation;\r\n                                break;\r\n                            }\r\n                            case 500: {\r\n                                toaster.pop('error', 'Internal Server Error');\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        \r\n            EMIService.GetMPFSByCPT(selectedCPTCode, defaultRequestHeaders)\r\n                .success(function (response) {\r\n        \r\n                    if (response.length === 1) {\r\n                        localStorage.setItem('currentCPTCode', JSON.stringify(response));\r\n                        $scope.CurrentCPT = response[0];\r\n        \r\n                        var oNationalPaymentRateRequest = {\r\n                            CPTCode: selectedCPTCode,\r\n                            Locale: Locality,\r\n                            PaymentRateScope: \"National\"\r\n                        };\r\n                        var nationalPaymentRateData = JSON.stringify(oNationalPaymentRateRequest);\r\n        \r\n                        if ($scope.CurrentCPT.Work_RVUs !== \"0\" && $scope.CurrentCPT.Work_RVUs !== \"NA\") {\r\n                            $scope.TechnicalRVU = \"NA\";\r\n                            $scope.TechnicalPaymentRate = 0;\r\n        \r\n                            EMIService.GetGlobalRVU(selectedCPTCode, defaultRequestHeaders)\r\n                                .success(function (response) {\r\n                                    EMIService.serviceGlobalRVU = response.GlobalRVU;\r\n                                    $scope.GlobalRVU = EMIService.serviceGlobalRVU;\r\n                                }).catch(function (error) {\r\n                                    alert(error);\r\n                                });\r\n        \r\n                            EMIService.GetProfessionalRVU(selectedCPTCode, defaultRequestHeaders)\r\n                                .success(function (response) {\r\n                                    EMIService.serviceProfessionalRVU = response.ProfessionalRVU;\r\n                                    $scope.ProfessionalRVU = response.ProfessionalRVU;\r\n                                }).catch(function (error) {\r\n                                    alert(error);\r\n                                });\r\n        \r\n                            EMIService.GetGlobalPaymentRate(nationalPaymentRateData, defaultRequestHeaders)\r\n                                .success(function (response) {\r\n                                    EMIService.serviceGlobalPaymentRate = response.PaymentRate;\r\n                                    $scope.GlobalPaymentRate = EMIService.serviceGlobalPaymentRate;\r\n                                }).error(function (status, config, error) {\r\n                                    switch (status) {\r\n                                        case 401: {\r\n                                            toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                            $timeout(3000);\r\n                                            $window.location = LoginRedirectLocation;\r\n                                            break;\r\n                                        }\r\n                                        case 500: {\r\n                                            toaster.pop('error', 'Internal Server Error');\r\n                                        }\r\n                                    }\r\n                                });\r\n        \r\n                            EMIService.GetProfessionalPaymentRate(nationalPaymentRateData, defaultRequestHeaders)\r\n                                .success(function (response) {\r\n                                    EMIService.serviceProfessionalPaymentRate = response.PaymentRate;\r\n                                    $scope.ProfessionalPaymentRate = EMIService.serviceProfessionalPaymentRate;\r\n                                }).error(function (status, config, error) {\r\n                                    switch (status) {\r\n                                        case 401: {\r\n                                            toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                            $timeout(3000);\r\n                                            $window.location = LoginRedirectLocation;\r\n                                            break;\r\n                                        }\r\n                                        case 500: {\r\n                                            toaster.pop('error', 'Internal Server Error');\r\n                                        }\r\n                                    }\r\n                                });\r\n                        }\r\n                        else {\r\n                            $scope.ProfessionalPaymentRate = 0;\r\n                            $scope.ProfessionalRVU = \"NA\";\r\n        \r\n                            EMIService.GetGlobalRVU(selectedCPTCode, defaultRequestHeaders)\r\n                                .success(function (response) {\r\n                                    EMIService.serviceGlobalRVU = response.GlobalRVU;\r\n                                    $scope.GlobalRVU = EMIService.serviceGlobalRVU;\r\n                                }).catch(function (error) {\r\n                                    alert(error);\r\n                                });\r\n        \r\n                            EMIService.GetTechnicalRVU(selectedCPTCode, defaultRequestHeaders)\r\n                                .success(function (response) {\r\n                                    EMIService.serviceTechnicalRVU = response.TechnicalRVU;\r\n                                    $scope.TechnicalRVU = EMIService.serviceTechnicalRVU;\r\n                                }).catch(function (error) {\r\n                                    alert(error);\r\n                                });\r\n        \r\n                            EMIService.GetTechnicalPaymentRate(nationalPaymentRateData, defaultRequestHeaders)\r\n                                .success(function (response) {\r\n                                    EMIService.serviceTrchnicalPaymentRate = response.PaymentRate;\r\n                                    $scope.TechnicalPaymentRate = EMIService.serviceTrchnicalPaymentRate;\r\n                                }).catch(function (error) {\r\n                                    switch (status) {\r\n                                        case 401: {\r\n                                            toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                            $timeout(3000);\r\n                                            $window.location = LoginRedirectLocation;\r\n                                            break;\r\n                                        }\r\n                                        case 500: {\r\n                                            toaster.pop('error', 'Internal Server Error');\r\n                                        }\r\n                                    }\r\n                                });\r\n        \r\n                            EMIService.GetGlobalPaymentRate(nationalPaymentRateData, defaultRequestHeaders)\r\n                                .success(function (response) {\r\n                                    EMIService.serviceGlobalPaymentRate = response.PaymentRate;\r\n                                    $scope.GlobalPaymentRate = EMIService.serviceGlobalPaymentRate;\r\n                                }).error(function (status, config, error) {\r\n                                    switch (status) {\r\n                                        case 401: {\r\n                                            toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                            $timeout(3000);\r\n                                            $window.location = LoginRedirectLocation;\r\n                                            break;\r\n                                        }\r\n                                        case 500: {\r\n                                            toaster.pop('error', 'Internal Server Error');\r\n                                        }\r\n                                    }\r\n                                });\r\n                        }\r\n                    }\r\n                    else {\r\n                         oNationalPaymentRateRequest = {\r\n                            CPTCode: selectedCPTCode,\r\n                            Locale: Locality,\r\n                            PaymentRateScope: \"National\"\r\n                        };\r\n        \r\n                        localStorage.setItem('currentCPTCode', JSON.stringify(response));\r\n        \r\n                        nationalPaymentRateData = JSON.stringify(oNationalPaymentRateRequest);\r\n        \r\n                        $scope.CurrentCPT = response[0];\r\n        \r\n                        EMIService.GetGlobalRVU(selectedCPTCode, defaultRequestHeaders)\r\n                            .success(function (response) {\r\n                                EMIService.serviceGlobalRVU = response.GlobalRVU;\r\n                                $scope.GlobalRVU = EMIService.serviceGlobalRVU;\r\n                            }).catch(function (error) {\r\n                                alert(error);\r\n                            });\r\n        \r\n                       EMIService.GetProfessionalRVU(selectedCPTCode, defaultRequestHeaders)\r\n                            .success(function (response) {\r\n                                $scope.ProfessionalRVU = response.ProfessionalRVU;\r\n                            }).catch(function (error) {\r\n                                alert(error);\r\n                            });\r\n        \r\n                       EMIService.GetTechnicalRVU(selectedCPTCode, defaultRequestHeaders)\r\n                           .success(function (response) {\r\n                               EMIService.serviceTechnicalRVU = response.TechnicalRVU;\r\n                               $scope.TechnicalRVU = EMIService.serviceTechnicalRVU;\r\n                           }).catch(function (error) {\r\n                               alert(error);\r\n                           });\r\n        \r\n                       EMIService.GetTechnicalPaymentRate(nationalPaymentRateData, defaultRequestHeaders)\r\n                           .success(function (response) {\r\n                               EMIService.serviceTrchnicalPaymentRate = response.PaymentRate;\r\n                               $scope.TechnicalPaymentRate = EMIService.serviceTrchnicalPaymentRate;\r\n                           }).catch(function (error) {\r\n                               switch (status) {\r\n                                   case 401: {\r\n                                       toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                       $timeout(3000);\r\n                                       $window.location = LoginRedirectLocation;\r\n                                       break;\r\n                                   }\r\n                                   case 500: {\r\n                                       toaster.pop('error', 'Internal Server Error');\r\n                                       break;\r\n                                   }\r\n                               }\r\n                           });\r\n        \r\n                       EMIService.GetGlobalPaymentRate(nationalPaymentRateData, defaultRequestHeaders)\r\n                           .success(function (response) {\r\n                               EMIService.serviceGlobalPaymentRate = response.PaymentRate;\r\n                               $scope.GlobalPaymentRate = EMIService.serviceGlobalPaymentRate;\r\n                           }).error(function (status, config, error) {\r\n                               switch (status) {\r\n                                   case 401: {\r\n                                       toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                       $timeout(3000);\r\n                                       $window.location = LoginRedirectLocation;\r\n                                   }\r\n                                   case 500: {\r\n                                       toaster.pop('error', 'Internal Server Error');\r\n                                   }\r\n                               }\r\n                           });\r\n        \r\n                       EMIService.GetProfessionalPaymentRate(nationalPaymentRateData, defaultRequestHeaders)\r\n                           .success(function (response) {\r\n                               EMIService.serviceProfessionalPaymentRate = response.PaymentRate;\r\n                               $scope.ProfessionalPaymentRate = EMIService.serviceProfessionalPaymentRate;\r\n                           }).error(function (status, config, error) {\r\n                               switch (status) {\r\n                                   case 401: {\r\n                                       toaster.pop('error', 'Authentication session may be expired, redirecting to login.');\r\n                                       $timeout(3000);\r\n                                       $window.location = LoginRedirectLocation;\r\n                                       break;\r\n                                   }\r\n                                   case 500: {\r\n                                       toaster.pop('error', 'Internal Server Error');\r\n                                   }\r\n                               }\r\n                           });\r\n                    }\r\n        \r\n                }).catch(function (error) {\r\n                    alert(error);\r\n                });\r\n        \r\n            EMIService.GetGPCI(defaultRequestHeaders)\r\n                .success(function (response) {\r\n                    EMIService.serviceGPCI = response;\r\n                    $scope.GPCILocale = EMIService.serviceGPCI;\r\n                    Locality = EMIService.serviceGPCI.LocalName;\r\n                }).catch(function (error) {\r\n                    alert(error);\r\n                });\r\n        \r\n           EMIService.GetOPPSByCPT(selectedCPTCode, defaultRequestHeaders)\r\n               .success(function (response) {\r\n                   EMIService.serviceOPPS = response;    \r\n                   $scope.CurrentOPPS = EMIService.serviceOPPS;\r\n                    if ($scope.CurrentOPPS.CH === \"\") {\r\n                        $scope.CurrentOPPS.CH = \"N/A\";\r\n                    }\r\n                }).catch(function (error) {\r\n                    alert(error);\r\n                });\r\n        \r\n           EMIService.GetCCIByCPT(selectedCPTCode, defaultRequestHeaders)\r\n                .success(function (response) {\r\n                    EMIService.serviceCCI = response;\r\n                    $scope.CCIEditOptions.data = EMIService.serviceCCI;\r\n                });\r\n        \r\n        \r\n           EMIService.GetMUEByCPT(selectedCPTCode, defaultRequestHeaders)\r\n               .success(function (response) {\r\n                    EMIService.serviceMUE = response;\r\n                    $scope.MUEOptions.data = EMIService.serviceMUE;\r\n                });\r\n        \r\n            $scope.CCIEditOptions = {\r\n                multiSelect: false,\r\n                columnDefs: [\r\n                    { field: 'Column_1', displayName: 'Column One', width: 125 },\r\n                    { field: 'Column_2', displayName: 'Column Two', width: 125 },\r\n                    { field: 'Deletion', displayName: 'Deletion', width: 125 },\r\n                    { field: 'Modifier', displayName: 'Modifier', width: 125 },\r\n                    { field: 'PTP_Edit_Rationale', displayName: 'PTP Rationale', width: 125 }\r\n                ],\r\n        \r\n            };\r\n        \r\n            $scope.MUEOptions = {\r\n                multiSelect: false,\r\n                columnDefs: [\r\n                    { field: 'HCPCS_CPT_Code', displayName: ' CPT Code', width: 125 },\r\n                    { field: 'Outpatient_Hospital_Services_MUE_Values', displayName: 'OutPatient MUE', width: 125 },\r\n                    { field: 'MUE_Adjudication_Indicator', displayName: 'Adjudication Indicator', width: 125 },\r\n                    { field: 'MUE_Rationale', displayName: 'Rationale', width: 125 },\r\n                ],\r\n            };\r\n        \r\n            $scope.WageIndexGridOptions = {\r\n                multiSelect: false,\r\n                enableFiltering: true,\r\n                enableRowSelection: true,\r\n                columnDefs: [\r\n                    {field: 'Area_Name', displayName: 'Area Name', width: 225 },\r\n                    {field: 'State', displayName: 'State', width: 225 },\r\n                    {field: 'State_Code', displayName: 'State Code', width: 225 },\r\n                    {field: 'Wage_Index', displayName: 'Wage Index', width: 225},\r\n                ]\r\n            };\r\n        \r\n            $scope.WageIndexGridOptions.onRegisterApi = function (gridApi) {\r\n                //set gridApi on scope\r\n                $scope.WageIndexGridApi = gridApi;\r\n                gridApi.selection.on.rowSelectionChanged($scope, function (row) {\r\n                    $scope.items = $scope.WageIndexGridApi.selection.getSelectedRows();\r\n                });\r\n        \r\n                gridApi.selection.on.rowSelectionChangedBatch($scope, function (rows) {\r\n                    var msg = 'rows changed ' + rows.length;\r\n                    //$log.log(msg);\r\n                });\r\n        \r\n            };\r\n        }\r\n    \r\n    })();\r\n    ","(function(){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .controller('DiseaseSiteCtrl', DiseaseSiteController);\r\n    \r\n        DiseaseSiteController.$inject = ['$scope', '$http', '$state', 'EMIService', 'authService', 'toaster'];\r\n    \r\n        function DiseaseSiteController ($scope, $http, $state, EMIService, authService, toaster) {\r\n            var defaultRequestHeaders = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n                }\r\n            };\r\n        \r\n            authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n            var UserId = localStorage.getItem('UserID');\r\n            //var isSubscriptionValid = localStorage.getItem('ValidSubscription');\r\n    \r\n            \r\n    \r\n            EMIService.GetDiseaseSites(defaultRequestHeaders)\r\n            .then(function(response){\r\n                EMIService.serviceDiseaseSites = response.data;\r\n                $scope.DiseaseSites = EMIService.serviceDiseaseSites;\r\n            }).catch(function(error){\r\n        \r\n            });\r\n        \r\n            $scope.chooseDiseaseSite = function() {\r\n                EMIService.serviceChosenDiseaseSite = $scope.DiseaseSite;\r\n                $state.go('app.modality');\r\n            };\r\n        }\r\n    })();","(function(){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .controller('LoginCtrl', LoginController);\r\n    \r\n        LoginController.$inject = ['$scope', '$state', 'LoginService'];\r\n    \r\n        function LoginController ($scope, $state, LoginService) {\r\n            $scope.goToRegistration = function () {\r\n                $state.go('register');\r\n            };\r\n        \r\n            $scope.AuthenticateUser = function () {\r\n                LoginService.login();\r\n            };\r\n        }\r\n    \r\n    })();","(function(){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .controller('LocaleCtrl', LocaleController);\r\n    \r\n        LocaleController.$inject = ['$scope', '$state', 'EMIService', 'toaster', 'authService'];\r\n    \r\n        function LocaleController ($scope, $state, EMIService, toaster, authService) {\r\n            var defaultRequestHeaders = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n                }\r\n            };\r\n            \r\n            authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n            \r\n            $scope.chooseSetting = function(){\r\n                EMIService.serviceChosenTreatmentSetting = $scope.TreatmentSetting;\r\n                $state.go('app.treatment-summary');\r\n            };\r\n        }\r\n    \r\n    })();","(function () {\r\n    \r\n        angular.module('EmediCodesApplication')\r\n            .controller('ICD10Ctrl', ICD10Controller);\r\n    \r\n        ICD10Controller.$inject = ['$scope', '$state', 'EMIService', 'authService', 'toaster'];\r\n    \r\n        function ICD10Controller($scope, $state, EMIService, authService, toaster) {\r\n            var defaultRequestHeaders = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n                }\r\n            };\r\n    \r\n            authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n    \r\n            var UserId = localStorage.getItem('UserID');\r\n    \r\n            EMIService.CheckUserSubscription(UserId, defaultRequestHeaders)\r\n            .then(function(response){\r\n                localStorage.setItem('ValidSubscription', response.ValidSubscription);\r\n                if(!response.data.ValidSubscription)\r\n                    $state.go('InvalidSubscription');\r\n            });\r\n    \r\n            $scope.ICD10ListOptions = {\r\n                enableFiltering: true,\r\n                enableRowSelection: true,\r\n                columnDefs: [\r\n                    { field: 'Name', displayName: 'Name' },\r\n                    { field: 'CODE', displayName: 'Code' },\r\n                    { field: 'ACTIVE', displayName: 'Is Active' },\r\n                ],\r\n            };\r\n    \r\n            EMIService.GetICD10Count(defaultRequestHeaders)\r\n                .then(function (response) {\r\n    \r\n                    $scope.totalItems = response.data;\r\n    \r\n                    $scope.pageSize = 100;\r\n                    $scope.totalPages = $scope.totalItems / $scope.pageSize;\r\n                    $scope.currentPage = 1;\r\n    \r\n                    var obj = {};\r\n                    obj.page = $scope.currentPage;\r\n                    obj.pageSize = $scope.pageSize;\r\n    \r\n                    var data = JSON.stringify(obj);\r\n    \r\n                    EMIService.GetICD10Paged(data, defaultRequestHeaders)\r\n                        .then(function (response) {\r\n                            EMIService.serviceICD10PagedData = response;\r\n                            $scope.ICD10ListOptions.data = EMIService.serviceICD10PagedData.data;\r\n                        });\r\n    \r\n                });\r\n    \r\n            $scope.onPageChanged = function () {\r\n                var obj = {};\r\n                obj.page = $scope.currentPage;\r\n                obj.pageSize = $scope.pageSize;\r\n    \r\n                var data = JSON.stringify(obj);\r\n    \r\n                EMIService.GetICD10Paged(data, defaultRequestHeaders)\r\n                    .then(function (response) {\r\n                        EMIService.serviceICD10PagedData = response;\r\n                        $scope.ICD10ListOptions.data = EMIService.serviceICD10PagedData.data;\r\n                    });\r\n            };\r\n    \r\n            $scope.searchByICD10Code = function () {\r\n    \r\n                EMIService.SearchICD10($scope.SearchValue, defaultRequestHeaders)\r\n                    .then(function (response) {\r\n                        EMIService.servceSearchedICD10 = response;\r\n                        $scope.ICD10ListOptions.data = EMIService.servceSearchedICD10.data;\r\n                    });\r\n            };\r\n        }\r\n    })();","(function(){\r\n\r\n    angular.module('EmediCodesApplication')\r\n    .controller('PaymentCtrl', PaymentController);\r\n\r\n    PaymentController.$inject = ['$scope', 'toaster', 'RegistrationService', '$state'];\r\n    \r\n    function PaymentController($scope, toaster, RegistrationService, $state){\r\n        var stripe = Stripe('pk_live_uJ6WdiMXisI13NekLrNDPHiv');\r\n        \r\n        var elements = stripe.elements();\r\n        var style = {\r\n                            base: {\r\n                            color: '#32325d',\r\n                            lineHeight: '24px',\r\n                            fontFamily: 'Helvetica Neue',\r\n                            fontSmoothing: 'antialiased',\r\n                            fontSize: '16px',\r\n                            '::placeholder': {\r\n                                color: '#aab7c4'\r\n                            }\r\n                            },\r\n                            invalid: {\r\n                            color: '#fa755a',\r\n                            iconColor: '#fa755a'\r\n                            }\r\n                        };\r\n        $scope.card = elements.create('card', {style: style});\r\n        $scope.card.mount('#card-element');\r\n\r\n        // Handle real-time validation errors from the card Element.\r\n        $scope.card.addEventListener('change', function(event) {\r\n                if (event.error) {\r\n                $scope.cardError = event.error.message;\r\n                } else {\r\n                $scope.cardError = '';\r\n                }\r\n        });\r\n\r\n            $scope.submit = function() {\r\n            $scope.cardError = '';\r\n            $scope.submitting = true;\r\n            createToken();\r\n        };\r\n\r\n        // Send data directly to stripe \r\n        function createToken() {\r\n            stripe.createToken($scope.card).then(function(result) {\r\n                if (result.error) {\r\n                $scope.cardError = result.error.message;\r\n                $scope.submitting = false;\r\n                } else {\r\n                // Send the token to your server\r\n                stripeTokenHandler(result.token);\r\n                }\r\n            });\r\n        }\r\n\r\n        // Response Handler callback to handle the response from Stripe server\r\n        function stripeTokenHandler(token) {\r\n            var obj = {};\r\n\r\n            obj.UserId = RegistrationService.UserId;\r\n            obj.Auth0Id = RegistrationService.Auth0Identifier;\r\n            obj.Token = token.id;\r\n            obj.coupon_code = $scope.CouponCode;\r\n\r\n            var data = JSON.stringify(obj);\r\n\r\n            RegistrationService.HandleStripeToken(data)\r\n            .then(function(response){\r\n                toaster.success('Registration Success', 'You have been successfully registered you may now login.');\r\n                $state.transitionTo('login');\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .controller('ModalityCtrl', ModalityController);\r\n    \r\n        ModalityController.$inject = ['$scope', '$state', 'authService', 'EMIService', 'toaster'];\r\n    \r\n        function ModalityController ($scope, $state, authService, EMIService, toaster) {\r\n            var defaultRequestHeaders = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n                }\r\n            };\r\n        \r\n            authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n\r\n            var chosenDiseaseSite = EMIService.serviceChosenDiseaseSite;\r\n\r\n            EMIService.GetApplicableModalities(chosenDiseaseSite, defaultRequestHeaders)\r\n            .then(function(response){\r\n                EMIService.serviceApplicableModalities = response;\r\n                $scope.ApplicableModalities = EMIService.serviceApplicableModalities.data;\r\n            });\r\n        \r\n            $scope.chooseModality = function(){\r\n                EMIService.serviceChosenModalityID = $scope.Modality;\r\n                $state.go('app.locale');\r\n            };\r\n        }\r\n    \r\n    })();","(function(){\r\n\r\n    angular.module('EmediCodesApplication') \r\n        .controller('UserProfileCtrl', UserProfileController);\r\n\r\n    UserProfileController.$inject = ['$scope', '$state', 'EMIService', 'authService', 'toaster'];\r\n\r\n    function UserProfileController($scope, $state, EMIService, authService, toaster) {\r\n\r\n        var defaultRequestHeaders = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n            }\r\n        };\r\n\r\n        authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n\r\n        var UserId = localStorage.getItem('UserID');\r\n\r\n        EMIService.CheckUserSubscription(UserId, defaultRequestHeaders)\r\n        .then(function(response){\r\n           $scope.isValidSubscription = response.data.ValidSubscription;\r\n        });\r\n\r\n        $scope.createSubscription = function(){\r\n            EMIService.CheckUserPaymentMethod(UserId, defaultRequestHeaders)\r\n            .then(function(response){\r\n                if(response.data.PaymentMethodExists){\r\n                    EMIService.CreateNewSubscription(UserId, defaultRequestHeaders)\r\n                    .then(function(response){\r\n                        toaster.success('You have successfully subscribed to e-MediCodes');\r\n                        $state.go('app.case-list');\r\n                    }).catch(function(error){\r\n                        toast.error(error);\r\n                    });\r\n                }\r\n                else{\r\n                    $state.go('payment');\r\n                }\r\n            }).catch(function(error){\r\n                toaster.error(error);\r\n            });\r\n        };\r\n\r\n        $scope.cancelSubscription = function() {\r\n            EMIService.CancelUserSubscription(UserId, defaultRequestHeaders)\r\n            .then(function(response){\r\n                toaster.success(\"Your subscription has been cancelled.\");\r\n            }).catch(function(error){\r\n                toaster.error(error);\r\n            });\r\n        };\r\n    }\r\n\r\n})();","(function(){\r\n\r\n    angular.module('EmediCodesApplication')\r\n    .controller('RegistrationCtrl', RegistrationController);\r\n\r\n    RegistrationController.$inject = ['$scope', '$state', 'toaster', '$http', 'RegistrationService'];\r\n    \r\n        function RegistrationController($scope, $state, toaster, $http, RegistrationService) {\r\n            $scope.States = RegistrationService.States;\r\n            $scope.Countries = RegistrationService.Countries;\r\n    \r\n            $scope.Register = function () {\r\n                var obj = {};\r\n    \r\n                obj.first_name = $scope.RegisterForm.FirstName.$viewValue;\r\n                obj.last_name = $scope.RegisterForm.LastName.$viewValue;\r\n                obj.email_address = $scope.RegisterForm.CompanyEmail.$viewValue;\r\n                obj.city = $scope.RegisterForm.City.$viewValue;\r\n                obj.state = $scope.RegisterForm.State.$viewValue;\r\n                obj.country = $scope.RegisterForm.Country.$viewValue;\r\n                obj.street_address = $scope.RegisterForm.StreetAddress.$viewValue;\r\n                obj.phone_number = $scope.RegisterForm.PhoneNumber.$viewValue;\r\n                obj.password = $scope.RegisterForm.Password.$viewValue;\r\n                obj.password_confirm = $scope.RegisterForm.PasswordConfirm.$viewValue;\r\n\r\n                var data = JSON.stringify(obj);\r\n    \r\n                RegistrationService.RegisterUsers(data)\r\n                    .success(function (response) {\r\n                        RegistrationService.UserId = response.Id;\r\n                        RegistrationService.Auth0Identifier = response.Auth0Identifier;\r\n                        $state.go('payment');\r\n                    }).error(function (response) {\r\n                        toaster.error(\"Error\", response.Message);\r\n                    });\r\n            };\r\n        }\r\n\r\n})();","(function(){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .factory('authService', authService);\r\n    \r\n        authService.$inject = ['$state', 'angularAuth0', 'EMIService', '$timeout', '$rootScope', '$http', 'toaster'];\r\n    \r\n        function authService($state, angularAuth0, EMIService, $timeout, $rootScope, $http, toaster) {\r\n            var BaseUrl = EMIService.BaseUrl;\r\n        \r\n            /**\r\n             * @name  ValidateAuthorization\r\n             * @function ValidateAuthorization\r\n             * @description Validate if user requesting to access a component resource is\r\n                            authenticated and authorized, and redirect accordingly\r\n             * @param {any} Headers\r\n             */\r\n            function ValidateAuthorization(Headers) {\r\n        \r\n                $http({\r\n                    method: 'GET',\r\n                    url: BaseUrl + 'api/Validator',\r\n                    headers: Headers\r\n                }).then(function (response) {\r\n                    EMIService.isAuthorized = true;\r\n                }).catch(function (status, headers, config, error) {\r\n                    EMIService.isAuthorized = false;\r\n                    handleUnauthorized();\r\n                });\r\n        \r\n            }\r\n        \r\n            function handleUnauthorized() {\r\n                toaster.error('Your session has expired, you will be redirected to the login.');\r\n                $timeout(3000);\r\n                $state.go('login');\r\n            }\r\n        \r\n            /**\r\n             * @name handleAuthentication\r\n             * @function handleAuthentication\r\n             * @description Retrieve auth tokens and set proper local storage variables\r\n             */\r\n            function handleAuthentication() {\r\n                angularAuth0.parseHash(function (err, authResult) {\r\n                    if (authResult && authResult.accessToken && authResult.idToken) {\r\n                        setSession(authResult);\r\n                        _AuthToken = localStorage.getItem('id_token');\r\n                        $rootScope.$broadcast('AuthTokenSuccess');\r\n                    } else if (err) {\r\n                        $timeout(function () {\r\n        \r\n                        });\r\n                        console.log(err);\r\n                        alert('Error: ' + err.error + '. Check the console for further details.');\r\n                    }\r\n                });\r\n            }\r\n        \r\n            function getProfile(cb) {\r\n                var accessToken = localStorage.getItem('access_token');\r\n                if (!accessToken) {\r\n                    throw new Error('Access token must exist to fetch profile');\r\n                }\r\n                angularAuth0.client.userInfo(accessToken, function (err, profile) {\r\n                    if (profile) {\r\n                        EMIService.Auth0ID = profile.sub;\r\n                        $rootScope.$broadcast('Auth0IDSet');\r\n                        return profile.sub;\r\n                    }\r\n                    \r\n                });\r\n            }\r\n        \r\n            function setUserProfile(profile) {\r\n               userProfile = profile;\r\n            }\r\n        \r\n            /**\r\n             * @name logout\r\n             * @function logout\r\n             * @description clear localStorage variables and redirect user to the login page.\r\n             */\r\n            function logout() {\r\n                // Remove tokens and expiry time from localStorage\r\n                localStorage.removeItem('access_token');\r\n                localStorage.removeItem('id_token');\r\n                localStorage.removeItem('expires_at');\r\n                localStorage.removeItem('currentCPTCode');\r\n                localStorage.removeItem('UserID');\r\n                $state.go('login');\r\n            }\r\n        \r\n            function isAuthenticated() {\r\n                // Check whether the current time is past the \r\n                // access token's expiry time\r\n                var sToken = 'Bearer ' + localStorage.getItem('id_token');\r\n        \r\n                var oHeaders = {\r\n                    'Authorization': sToken\r\n                };\r\n        \r\n                ValidateAuthorization(oHeaders);\r\n        \r\n                var expiresAt = JSON.parse(localStorage.getItem('expires_at'));\r\n                return new Date().getTime() < expiresAt;\r\n            }\r\n        \r\n            return {\r\n                handleAuthentication: handleAuthentication,\r\n                logout: logout,\r\n                isAuthenticated: isAuthenticated,\r\n                ValidateAuthorization: ValidateAuthorization,\r\n                getProfile: getProfile,\r\n                handleUnauthorized: handleUnauthorized\r\n            };\r\n        }\r\n    \r\n    })();","(function(){\r\n\r\n    angular.module('EmediCodesApplication')\r\n    .factory('callBackService', CallBackService);\r\n\r\n    CallBackService.$inject = ['angularAuth0', '$state'];\r\n\r\n    function CallBackService(angularAuth0, $state) {\r\n        function handleAuthentication() {\r\n            angularAuth0.parseHash(function (err, authResult) {\r\n                if (authResult && authResult.accessToken && authResult.idToken) {\r\n                    setSession(authResult);\r\n                    $state.go('app.case-list');\r\n                } else if (err) {   \r\n                    console.log(err);\r\n                    alert('Error: ' + err.error + '. Check the console for further details.');\r\n                }\r\n            });\r\n        }\r\n    \r\n        function setSession(authResult) {\r\n            // Set the time that the access token will expire at\r\n            var expiresAt = JSON.stringify((authResult.expiresIn) + new Date().getTime());\r\n            localStorage.setItem('access_token', authResult.accessToken);\r\n            localStorage.setItem('id_token', authResult.idToken);\r\n            localStorage.setItem('expires_at', expiresAt);\r\n        }\r\n    \r\n        return {\r\n            handleAuthentication: handleAuthentication\r\n        }\r\n    }\r\n\r\n})()","(function (){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .factory('EMIService', EMIService);\r\n    \r\n        EMIService.$inject = ['$http', 'toaster', '$window', '$timeout', '$rootScope'];\r\n    \r\n        function EMIService ($http, toaster, $window, $timeout, $rootScope) {\r\n            var BaseUrl = 'https://www.app.emedicodes.com/';\r\n        \r\n            var _serviceMPFS = {};\r\n            _RetrieveAllMPFS = {};\r\n            _RetreivePagedMPFS = {};\r\n            _RetreiveMPFSTotal = {};\r\n            var _serviceMPFSTotal = 0;\r\n        \r\n            var _serviceGlobalPaymentRate = 0;\r\n            _GetGlobalPaymentRate = {};\r\n        \r\n            var _serviceWageIndexAreas = {};\r\n            _GetWageIndexAreas = {};\r\n        \r\n            var _serviceProfessionalPaymentRate = 0;\r\n            _GetProfessionalPaymentRate = {};\r\n        \r\n            var _serviceTechnicalPaymentRate = 0;\r\n            _GetTechnicalPaymentRate = {};\r\n        \r\n            var _serviceMPFSByCPT = {};\r\n            _GetMPFSByCPT = {};\r\n        \r\n            var _serviceGlobalRVU = \"\";\r\n            _GetGlobalRVU = {};\r\n        \r\n            var _serviceTechnicalRVU = \"\";\r\n            _GetTechnicalRVU = {};\r\n        \r\n            var _serviceProfessionalRVU = \"\";\r\n            _GetProfessionalRVU = {};\r\n        \r\n            var _serviceGPCI = {};\r\n            _GetGPCI = {};\r\n        \r\n            var _serviceOPPS = {};\r\n            _GetOPPSByCPT = {};\r\n        \r\n            var _serviceCCI = {};\r\n            _GetCCIByCPT = {};\r\n        \r\n            var _serviceMUE = {};\r\n            _GetMUEByCPT = {};\r\n        \r\n            var _serviceSelectedWageArea = {};\r\n            _PerformWageIndexCalculation = {};\r\n        \r\n            var _seviceSearchedMPFSResults = {};\r\n            _SearchMPFSByCPT = {};\r\n        \r\n            var _serviceDiseaseSites = {};\r\n            _GetDiseaseSites = {};\r\n        \r\n            var _serviceChosenDiseaseSite = \"\";\r\n            _GetApplicableModalities = {};\r\n            var _serviceApplicableModalities = {};\r\n        \r\n            var _serviceChosenModalityID = 0;\r\n        \r\n            var _serviceTreatmentCodes = {};\r\n            var _serviceChosenTreatmentSetting = \"\";\r\n            var _serviceTreatmentCodes = {};\r\n            _GetTreatmentCodesByModality = {};\r\n        \r\n            var _calculatorPrevBtnDisabled = true;\r\n            var _calculatorNextBtnDisabled = true;\r\n            var _calculatorCalcBtnDisabled = false;\r\n        \r\n            var _isAuthorized = false;\r\n            var _Auth0ID = \"\";\r\n    \r\n            var _serviceUserProfile = {};\r\n            _GetUserProfile = {};\r\n    \r\n            var _serviceICD10Data = {};\r\n            _GetICD10Data ={};\r\n    \r\n            _GetICD10Count = {};\r\n            _GetICD10Paged = {};\r\n            var _serviceICD10PagedData = {};\r\n    \r\n            var _serviceSearchedICD10 = {};\r\n            _SearchICD10 = {};\r\n    \r\n            var _SelectedCPTCaseCodes = [];\r\n            var _SelectedCodesToRemove = [];\r\n    \r\n            var _CurrentUserID = 0;\r\n    \r\n            _SaveCaseToDB = {};\r\n            _SaveCaseCodesToDB = {};\r\n    \r\n            var _serviceUserCaseList = {};\r\n            _GetUserCaseList = {};\r\n            var _UserID = 0;\r\n    \r\n            var _SelectedCaseID = 0;\r\n            _GetCaseCodeSummary = {};\r\n            var _serviceCaseCodeSummary = {};\r\n    \r\n            _CancelUserSubscription = {};\r\n            _CheckUserSubscription = {};\r\n            _CheckUserPaymentMethod = {};\r\n            _CreateNewSubscription = {};\r\n            _AddUserPaymentMethod = {};\r\n            _GetWageIndex = {};\r\n            var _serviceWageIndex = {};\r\n\r\n            _CheckFreeTrialPeriod = {};\r\n            _GetFreeTrialPeriodAmount = {};\r\n\r\n            _DeleteCase = {};\r\n            var _deleteSelectedCaseID = 0;\r\n\r\n            _SubmitBugReport = {};\r\n\r\n            var _SubmitBugReport = function(UserId, config, data){\r\n                return $http.post(BaseUrl + 'api/BugReport/' + UserId, data, config)\r\n            };\r\n\r\n            var _GetFreeTrialPeriodAmount = function(UserId, config){\r\n                return $http.get(BaseUrl + 'api/Payments/' + UserId + '/FreeTrialTime', config);\r\n            };\r\n\r\n            var _CheckFreeTrialPeriod = function (UserId, config) {\r\n                return $http.get(BaseUrl + 'api/Payments/' + UserId + '/FreeTrialPeriod', config);\r\n            };\r\n\r\n            var _DeleteCase = function(CaseId, config){\r\n                return $http.get(BaseUrl + 'api/Case/' + CaseId, config);\r\n            };\r\n\r\n            var _GetWageIndex = function(config) {\r\n              return $http.get(BaseUrl + 'api/WageIndex', config);\r\n            };\r\n\r\n    \r\n            var _AddUserPaymentMethod = function(data, config){\r\n                return $http.post(BaseUrl + 'api/Payments/PaymentMethod', data, config);\r\n            };\r\n    \r\n            var _CreateNewSubscription = function(UserId, config){\r\n                return $http.get(BaseUrl + 'api/Payments/' + UserId + '/Subscribe');\r\n            };\r\n    \r\n            var _CheckUserPaymentMethod = function(UserId, config){\r\n                return $http.get(BaseUrl + 'api/Payments/' + UserId + '/PaymentMethod', config);\r\n            };\r\n    \r\n            var _CheckUserSubscription = function(UserId, config){\r\n                return $http.get(BaseUrl + 'api/Payments/' + UserId + '/CheckSubscription', config);\r\n            };\r\n    \r\n            var _CancelUserSubscription = function(UserId, config){\r\n                return $http.get(BaseUrl + 'api/Payments/' + UserId + '/CancelSubscription', config);\r\n            };\r\n    \r\n            var _GetCaseCodeSummary = function(CaseID, data, config){\r\n                return $http.post(BaseUrl + 'api/Case/' + CaseID + '/CaseSummary', data, config);\r\n            };\r\n    \r\n            var _GetUserCaseList = function(UserID, config){\r\n                return $http.get(BaseUrl + 'api/Case/' + UserID + '/CaseList', config);\r\n            };\r\n    \r\n            var _SaveCaseCodesToDB = function(data, CaseID, config){\r\n                return $http.post(BaseUrl + 'api/Case/CaseCodes/' + CaseID, data, config);\r\n            };\r\n    \r\n            var _SaveCaseToDB = function(data, config){\r\n                return $http.post(BaseUrl + 'api/Case', data, config);\r\n            };\r\n    \r\n            var _SearchICD10 = function(data, config){\r\n                return $http.get(BaseUrl + 'api/Diseases/' + data + '/Search', config);\r\n            };\r\n    \r\n            var _GetICD10Paged = function(data, config){\r\n                return $http.post(BaseUrl + 'api/Diseases/PageRecords', data, config);\r\n            };\r\n    \r\n            var _GetICD10Count = function(config){\r\n                return $http.get(BaseUrl + 'api/Diseases/Count', config);\r\n            };\r\n        \r\n            var _GetICD10Data = function(config){\r\n                return $http.get(BaseUrl + 'api/Diseases', config);\r\n            };\r\n    \r\n            var _GetUserProfile = function(Auth0ID, config) {\r\n                return $http.get(BaseUrl + 'api/Users/'+ Auth0ID + '/ProfileInfo', config);\r\n            };\r\n    \r\n            var _RegisterUser = function(data){\r\n                return $http.post(BaseUrl + 'api/Users', data);\r\n            };\r\n    \r\n            var _GetTreatmentCodesByModality = function(ModalityID, apiResource, config){\r\n                return $http.get(BaseUrl + 'api/TreatmentCodeCalculator/' + ModalityID + '/' + apiResource, config);\r\n            };\r\n        \r\n            var _GetApplicableModalities = function(chosenDiseaseSite, config){\r\n                return $http.get(BaseUrl + 'api/Modalities/'+ chosenDiseaseSite + '/DiseaseSiteApplicableModalities', config);\r\n            };\r\n        \r\n            var _GetDiseaseSites = function(config){\r\n                return $http.get(BaseUrl + 'api/DiseaseSites', config);\r\n            };\r\n        \r\n            var _SearchMPFSByCPT = function(CptCodePartial, config){\r\n                return $http.get(BaseUrl + 'api/MPFS/' + CptCodePartial + '/Search', config);\r\n            };\r\n        \r\n            var _RetreiveMPFSTotal = function(config){\r\n                return $http.get(BaseUrl + 'api/MPFS/Count', config);\r\n            };\r\n        \r\n            var _RetreivePagedMPFS = function(data, config) {\r\n                return $http.post(BaseUrl + 'api/MPFS/PageRecords', data, config);\r\n            };\r\n        \r\n            var _PerformWageIndexCalculation = function(data, config) {\r\n                return $http.post(BaseUrl + 'api/WageIndex/Calculate', data, config);\r\n            };\r\n        \r\n            var _GetWageIndexAreas = function() {\r\n                return $http.get(BaseUrl + 'api/WageIndex');\r\n            };\r\n        \r\n            var _GetMUEByCPT = function (SelectedCPT, config) {\r\n                return $http.get(BaseUrl + 'api/MUEInformation/' + SelectedCPT + '/CPT', config);\r\n            };\r\n        \r\n            var _GetCCIByCPT = function (SelectedCPT, config) {\r\n                return $http.get(BaseUrl + 'api/CCIEdits/' + SelectedCPT + '/CPT', config);\r\n            };\r\n        \r\n            var _GetOPPSByCPT = function (SelectedCPT, config) {\r\n                return $http.get(BaseUrl + 'api/OPPS/' + SelectedCPT + '/CPT', config);\r\n            };\r\n        \r\n            var _GetGPCI = function (config) {\r\n                return $http.get(BaseUrl + 'api/GPCI', config);\r\n            };\r\n        \r\n            var _GetGlobalRVU = function (SelectedCPTCode, Config) {\r\n                return $http.get(BaseUrl + 'api/MPFS/'+ SelectedCPTCode +'/GlobalRVUCalculation/', Config);\r\n            };\r\n        \r\n            var _GetProfessionalRVU = function (SelectedCPTCode, Config) {\r\n                return $http.get(BaseUrl + 'api/MPFS/' + SelectedCPTCode + '/ProfessionalRVUCalculation', Config);\r\n            };\r\n        \r\n            var _GetTechnicalRVU = function (SelectedCPTCode, Config) {\r\n                return $http.get(BaseUrl + 'api/MPFS/' + SelectedCPTCode + '/TechnicalRVUCalculation', Config);\r\n            };\r\n        \r\n            var _GetGlobalPaymentRate = function (data, config) {\r\n                return $http.post(BaseUrl + 'api/MPFS/GlobalPaymentRate', data, config);\r\n            };\r\n        \r\n            var _GetProfessionalPaymentRate = function (data, config) {\r\n                return $http.post(BaseUrl + 'api/MPFS/ProfessionalPaymentRate', data, config);\r\n            };\r\n        \r\n            var _GetTechnicalPaymentRate = function (data, config) {\r\n                return $http.post(BaseUrl + 'api/MPFS/TechnicalPaymentRate', data, config);\r\n            };\r\n        \r\n            var _GetMPFSByCPT = function (SelectedCPTCode, Config) {\r\n                return $http.get(BaseUrl + 'api/MPFS/'+ SelectedCPTCode +'/CPT', Config);\r\n            };\r\n        \r\n            var _RetrieveAllMPFS = function (Config) {\r\n                return $http.get(BaseUrl + 'api/MPFS', Config);\r\n            };\r\n            \r\n            return {\r\n                serviceMPFS: _serviceMPFS,\r\n                RetrieveAllMPFS: _RetrieveAllMPFS,\r\n                serviceGlobalPaymentRate: _serviceGlobalPaymentRate,\r\n                GetGlobalPaymentRate: _GetGlobalPaymentRate,\r\n                serviceProfessionalPayment: _serviceProfessionalPaymentRate,\r\n                GetProfessionalPaymentRate: _GetProfessionalPaymentRate,\r\n                serviceTechnicalPaymentRate: _serviceTechnicalPaymentRate,\r\n                GetTechnicalPaymentRate: _GetTechnicalPaymentRate,\r\n                serviceMPFSByCPT: _serviceMPFSByCPT,\r\n                GetMPFSByCPT: _GetMPFSByCPT,\r\n                GetGlobalRVU: _GetGlobalRVU,\r\n                serviceGlobalRVU: _serviceGlobalRVU,\r\n                GetProfessionalRVU: _GetProfessionalRVU,\r\n                serviceProfessionalRVU: _serviceProfessionalRVU,\r\n                GetTechnicalRVU: _GetTechnicalRVU,\r\n                serviceTechnicalRVU: _serviceTechnicalRVU,\r\n                serviceGPCI: _serviceGPCI,\r\n                GetGPCI: _GetGPCI,\r\n                serviceOPPS: _serviceOPPS,\r\n                GetOPPSByCPT: _GetOPPSByCPT,\r\n                serviceCCI: _serviceCCI,\r\n                GetCCIByCPT: _GetCCIByCPT,\r\n                serviceMUE: _serviceMUE,\r\n                GetMUEByCPT: _GetMUEByCPT,\r\n                serviceWageIndexAreas: _serviceWageIndexAreas,\r\n                GetWageIndexAreas: _GetWageIndexAreas,\r\n                serviceSelectedWageArea: _serviceSelectedWageArea,\r\n                PerformWageIndexCalculation: _PerformWageIndexCalculation,\r\n                RetreivePagedMPFS: _RetreivePagedMPFS,\r\n                serviceMPFSTotal: _serviceMPFSTotal,\r\n                RetreiveMPFSTotal: _RetreiveMPFSTotal,\r\n                serviceSearchedMPFSResults: _seviceSearchedMPFSResults,\r\n                SearchMPFSByCPT: _SearchMPFSByCPT,\r\n                serviceDiseaseSites: _serviceDiseaseSites,\r\n                GetDiseaseSites: _GetDiseaseSites,\r\n                serviceChosenDiseaseSite: _serviceChosenDiseaseSite,\r\n                serviceApplicableModalities: _serviceApplicableModalities,\r\n                GetApplicableModalities: _GetApplicableModalities,\r\n                serviceChosenModalityID: _serviceChosenModalityID,\r\n                serviceTreatmentCodes: _serviceTreatmentCodes,\r\n                serviceChosenTreatmentSetting: _serviceChosenTreatmentSetting,\r\n                GetTreatmentCodesByModality: _GetTreatmentCodesByModality,\r\n                calculatorPrevBtnDisabled: _calculatorPrevBtnDisabled,\r\n                calculatorNextBtnDisabled: _calculatorNextBtnDisabled,\r\n                calculatorCalcBtnDisabled: _calculatorCalcBtnDisabled,\r\n                isAuthorized: _isAuthorized,\r\n                RegisterUser: _RegisterUser,\r\n                Auth0ID: _Auth0ID,\r\n                serviceUserProfile: _serviceUserProfile,\r\n                GetUserProfile: _GetUserProfile,\r\n                serviceICD10Data: _serviceICD10Data,\r\n                GetICD10Data: _GetICD10Data,\r\n                GetICD10Count: _GetICD10Count,\r\n                GetICD10Paged: _GetICD10Paged,\r\n                serviceICD10PagedData: _serviceICD10PagedData,\r\n                serviceSearchedICD10: _serviceSearchedICD10,\r\n                SearchICD10: _SearchICD10,\r\n                SelectedCPTCaseCodes: _SelectedCPTCaseCodes,\r\n                SelectedCodesToRemove: _SelectedCodesToRemove,\r\n                CurrentUserID: _CurrentUserID,\r\n                SaveCaseToDB: _SaveCaseToDB,\r\n                SaveCaseCodesToDB: _SaveCaseCodesToDB,\r\n                serviceUserCaseList: _serviceUserCaseList,\r\n                GetUserCaseList: _GetUserCaseList,\r\n                UserID: _UserID,\r\n                SelectedCaseID: _SelectedCaseID,\r\n                GetCaseCodeSummary: _GetCaseCodeSummary,\r\n                serviceCaseCodeSummary: _serviceCaseCodeSummary,\r\n                CancelUserSubscription: _CancelUserSubscription,\r\n                CheckUserSubscription: _CheckUserSubscription,\r\n                CheckUserPaymentMethod: _CheckUserPaymentMethod,\r\n                CreateNewSubscription: _CreateNewSubscription,\r\n                AddUserPaymentMethod: _AddUserPaymentMethod,\r\n                BaseUrl: BaseUrl,\r\n                GetWageIndex: _GetWageIndex,\r\n                serviceWageIndex: _serviceWageIndex,\r\n                DeleteCase: _DeleteCase,\r\n                deleteSelectedCaseID: _deleteSelectedCaseID,\r\n                CheckFreeTrialPeriod: _CheckFreeTrialPeriod,\r\n                GetFreeTrialPeriodAmount: _GetFreeTrialPeriodAmount,\r\n                SubmitBugReport: _SubmitBugReport\r\n            };\r\n        }\r\n    \r\n    })();\r\n    ","(function(){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .factory('LoginService', LoginService);\r\n    \r\n        LoginService.$inject = ['angularAuth0'];\r\n    \r\n        function LoginService (angularAuth0) {\r\n            function login() {\r\n                angularAuth0.authorize();\r\n            }\r\n        \r\n            return {\r\n                login: login,\r\n            };\r\n        }\r\n    \r\n    })();","(function(){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .factory('RegistrationService', RegistrationServie);\r\n    \r\n        RegistrationServie.$inject = ['$http', 'EMIService'];\r\n    \r\n        function RegistrationServie($http, EMIService) {\r\n            var _UserId = 0;\r\n    \r\n            var Countries = [ \r\n                {\"name\": \"Afghanistan\", \"code\": \"AF\"}, \r\n                {\"name\": \"Åland Islands\", \"code\": \"AX\"}, \r\n                {\"name\": \"Albania\", \"code\": \"AL\"}, \r\n                {\"name\": \"Algeria\", \"code\": \"DZ\"}, \r\n                {\"name\": \"American Samoa\", \"code\": \"AS\"}, \r\n                {\"name\": \"AndorrA\", \"code\": \"AD\"}, \r\n                {\"name\": \"Angola\", \"code\": \"AO\"}, \r\n                {\"name\": \"Anguilla\", \"code\": \"AI\"}, \r\n                {\"name\": \"Antarctica\", \"code\": \"AQ\"}, \r\n                {\"name\": \"Antigua and Barbuda\", \"code\": \"AG\"}, \r\n                {\"name\": \"Argentina\", \"code\": \"AR\"}, \r\n                {\"name\": \"Armenia\", \"code\": \"AM\"}, \r\n                {\"name\": \"Aruba\", \"code\": \"AW\"}, \r\n                {\"name\": \"Australia\", \"code\": \"AU\"}, \r\n                {\"name\": \"Austria\", \"code\": \"AT\"}, \r\n                {\"name\": \"Azerbaijan\", \"code\": \"AZ\"}, \r\n                {\"name\": \"Bahamas\", \"code\": \"BS\"}, \r\n                {\"name\": \"Bahrain\", \"code\": \"BH\"}, \r\n                {\"name\": \"Bangladesh\", \"code\": \"BD\"}, \r\n                {\"name\": \"Barbados\", \"code\": \"BB\"}, \r\n                {\"name\": \"Belarus\", \"code\": \"BY\"}, \r\n                {\"name\": \"Belgium\", \"code\": \"BE\"}, \r\n                {\"name\": \"Belize\", \"code\": \"BZ\"}, \r\n                {\"name\": \"Benin\", \"code\": \"BJ\"}, \r\n                {\"name\": \"Bermuda\", \"code\": \"BM\"}, \r\n                {\"name\": \"Bhutan\", \"code\": \"BT\"}, \r\n                {\"name\": \"Bolivia\", \"code\": \"BO\"}, \r\n                {\"name\": \"Bosnia and Herzegovina\", \"code\": \"BA\"}, \r\n                {\"name\": \"Botswana\", \"code\": \"BW\"}, \r\n                {\"name\": \"Bouvet Island\", \"code\": \"BV\"}, \r\n                {\"name\": \"Brazil\", \"code\": \"BR\"}, \r\n                {\"name\": \"British Indian Ocean Territory\", \"code\": \"IO\"}, \r\n                {\"name\": \"Brunei Darussalam\", \"code\": \"BN\"}, \r\n                {\"name\": \"Bulgaria\", \"code\": \"BG\"}, \r\n                {\"name\": \"Burkina Faso\", \"code\": \"BF\"}, \r\n                {\"name\": \"Burundi\", \"code\": \"BI\"}, \r\n                {\"name\": \"Cambodia\", \"code\": \"KH\"}, \r\n                {\"name\": \"Cameroon\", \"code\": \"CM\"}, \r\n                {\"name\": \"Canada\", \"code\": \"CA\"}, \r\n                {\"name\": \"Cape Verde\", \"code\": \"CV\"}, \r\n                {\"name\": \"Cayman Islands\", \"code\": \"KY\"}, \r\n                {\"name\": \"Central African Republic\", \"code\": \"CF\"}, \r\n                {\"name\": \"Chad\", \"code\": \"TD\"}, \r\n                {\"name\": \"Chile\", \"code\": \"CL\"}, \r\n                {\"name\": \"China\", \"code\": \"CN\"}, \r\n                {\"name\": \"Christmas Island\", \"code\": \"CX\"}, \r\n                {\"name\": \"Cocos (Keeling) Islands\", \"code\": \"CC\"}, \r\n                {\"name\": \"Colombia\", \"code\": \"CO\"}, \r\n                {\"name\": \"Comoros\", \"code\": \"KM\"}, \r\n                {\"name\": \"Congo\", \"code\": \"CG\"}, \r\n                {\"name\": \"Congo, The Democratic Republic of the\", \"code\": \"CD\"}, \r\n                {\"name\": \"Cook Islands\", \"code\": \"CK\"}, \r\n                {\"name\": \"Costa Rica\", \"code\": \"CR\"}, \r\n                {\"name\": \"Cote D\\\"Ivoire\", \"code\": \"CI\"}, \r\n                {\"name\": \"Croatia\", \"code\": \"HR\"}, \r\n                {\"name\": \"Cuba\", \"code\": \"CU\"}, \r\n                {\"name\": \"Cyprus\", \"code\": \"CY\"}, \r\n                {\"name\": \"Czech Republic\", \"code\": \"CZ\"}, \r\n                {\"name\": \"Denmark\", \"code\": \"DK\"}, \r\n                {\"name\": \"Djibouti\", \"code\": \"DJ\"}, \r\n                {\"name\": \"Dominica\", \"code\": \"DM\"}, \r\n                {\"name\": \"Dominican Republic\", \"code\": \"DO\"}, \r\n                {\"name\": \"Ecuador\", \"code\": \"EC\"}, \r\n                {\"name\": \"Egypt\", \"code\": \"EG\"}, \r\n                {\"name\": \"El Salvador\", \"code\": \"SV\"}, \r\n                {\"name\": \"Equatorial Guinea\", \"code\": \"GQ\"}, \r\n                {\"name\": \"Eritrea\", \"code\": \"ER\"}, \r\n                {\"name\": \"Estonia\", \"code\": \"EE\"}, \r\n                {\"name\": \"Ethiopia\", \"code\": \"ET\"}, \r\n                {\"name\": \"Falkland Islands (Malvinas)\", \"code\": \"FK\"}, \r\n                {\"name\": \"Faroe Islands\", \"code\": \"FO\"}, \r\n                {\"name\": \"Fiji\", \"code\": \"FJ\"}, \r\n                {\"name\": \"Finland\", \"code\": \"FI\"}, \r\n                {\"name\": \"France\", \"code\": \"FR\"}, \r\n                {\"name\": \"French Guiana\", \"code\": \"GF\"}, \r\n                {\"name\": \"French Polynesia\", \"code\": \"PF\"}, \r\n                {\"name\": \"French Southern Territories\", \"code\": \"TF\"}, \r\n                {\"name\": \"Gabon\", \"code\": \"GA\"}, \r\n                {\"name\": \"Gambia\", \"code\": \"GM\"}, \r\n                {\"name\": \"Georgia\", \"code\": \"GE\"}, \r\n                {\"name\": \"Germany\", \"code\": \"DE\"}, \r\n                {\"name\": \"Ghana\", \"code\": \"GH\"}, \r\n                {\"name\": \"Gibraltar\", \"code\": \"GI\"}, \r\n                {\"name\": \"Greece\", \"code\": \"GR\"}, \r\n                {\"name\": \"Greenland\", \"code\": \"GL\"}, \r\n                {\"name\": \"Grenada\", \"code\": \"GD\"}, \r\n                {\"name\": \"Guadeloupe\", \"code\": \"GP\"}, \r\n                {\"name\": \"Guam\", \"code\": \"GU\"}, \r\n                {\"name\": \"Guatemala\", \"code\": \"GT\"}, \r\n                {\"name\": \"Guernsey\", \"code\": \"GG\"}, \r\n                {\"name\": \"Guinea\", \"code\": \"GN\"}, \r\n                {\"name\": \"Guinea-Bissau\", \"code\": \"GW\"}, \r\n                {\"name\": \"Guyana\", \"code\": \"GY\"}, \r\n                {\"name\": \"Haiti\", \"code\": \"HT\"}, \r\n                {\"name\": \"Heard Island and Mcdonald Islands\", \"code\": \"HM\"}, \r\n                {\"name\": \"Holy See (Vatican City State)\", \"code\": \"VA\"}, \r\n                {\"name\": \"Honduras\", \"code\": \"HN\"}, \r\n                {\"name\": \"Hong Kong\", \"code\": \"HK\"}, \r\n                {\"name\": \"Hungary\", \"code\": \"HU\"}, \r\n                {\"name\": \"Iceland\", \"code\": \"IS\"}, \r\n                {\"name\": \"India\", \"code\": \"IN\"}, \r\n                {\"name\": \"Indonesia\", \"code\": \"ID\"}, \r\n                {\"name\": \"Iran, Islamic Republic Of\", \"code\": \"IR\"}, \r\n                {\"name\": \"Iraq\", \"code\": \"IQ\"}, \r\n                {\"name\": \"Ireland\", \"code\": \"IE\"}, \r\n                {\"name\": \"Isle of Man\", \"code\": \"IM\"}, \r\n                {\"name\": \"Israel\", \"code\": \"IL\"}, \r\n                {\"name\": \"Italy\", \"code\": \"IT\"}, \r\n                {\"name\": \"Jamaica\", \"code\": \"JM\"}, \r\n                {\"name\": \"Japan\", \"code\": \"JP\"}, \r\n                {\"name\": \"Jersey\", \"code\": \"JE\"}, \r\n                {\"name\": \"Jordan\", \"code\": \"JO\"}, \r\n                {\"name\": \"Kazakhstan\", \"code\": \"KZ\"}, \r\n                {\"name\": \"Kenya\", \"code\": \"KE\"}, \r\n                {\"name\": \"Kiribati\", \"code\": \"KI\"}, \r\n                {\"name\": \"Korea, Democratic People\\\"S Republic of\", \"code\": \"KP\"}, \r\n                {\"name\": \"Korea, Republic of\", \"code\": \"KR\"}, \r\n                {\"name\": \"Kuwait\", \"code\": \"KW\"}, \r\n                {\"name\": \"Kyrgyzstan\", \"code\": \"KG\"}, \r\n                {\"name\": \"Lao People\\\"S Democratic Republic\", \"code\": \"LA\"}, \r\n                {\"name\": \"Latvia\", \"code\": \"LV\"}, \r\n                {\"name\": \"Lebanon\", \"code\": \"LB\"}, \r\n                {\"name\": \"Lesotho\", \"code\": \"LS\"}, \r\n                {\"name\": \"Liberia\", \"code\": \"LR\"}, \r\n                {\"name\": \"Libyan Arab Jamahiriya\", \"code\": \"LY\"}, \r\n                {\"name\": \"Liechtenstein\", \"code\": \"LI\"}, \r\n                {\"name\": \"Lithuania\", \"code\": \"LT\"}, \r\n                {\"name\": \"Luxembourg\", \"code\": \"LU\"}, \r\n                {\"name\": \"Macao\", \"code\": \"MO\"}, \r\n                {\"name\": \"Macedonia, The Former Yugoslav Republic of\", \"code\": \"MK\"}, \r\n                {\"name\": \"Madagascar\", \"code\": \"MG\"}, \r\n                {\"name\": \"Malawi\", \"code\": \"MW\"}, \r\n                {\"name\": \"Malaysia\", \"code\": \"MY\"}, \r\n                {\"name\": \"Maldives\", \"code\": \"MV\"}, \r\n                {\"name\": \"Mali\", \"code\": \"ML\"}, \r\n                {\"name\": \"Malta\", \"code\": \"MT\"}, \r\n                {\"name\": \"Marshall Islands\", \"code\": \"MH\"}, \r\n                {\"name\": \"Martinique\", \"code\": \"MQ\"}, \r\n                {\"name\": \"Mauritania\", \"code\": \"MR\"}, \r\n                {\"name\": \"Mauritius\", \"code\": \"MU\"}, \r\n                {\"name\": \"Mayotte\", \"code\": \"YT\"}, \r\n                {\"name\": \"Mexico\", \"code\": \"MX\"}, \r\n                {\"name\": \"Micronesia, Federated States of\", \"code\": \"FM\"}, \r\n                {\"name\": \"Moldova, Republic of\", \"code\": \"MD\"}, \r\n                {\"name\": \"Monaco\", \"code\": \"MC\"}, \r\n                {\"name\": \"Mongolia\", \"code\": \"MN\"}, \r\n                {\"name\": \"Montserrat\", \"code\": \"MS\"}, \r\n                {\"name\": \"Morocco\", \"code\": \"MA\"}, \r\n                {\"name\": \"Mozambique\", \"code\": \"MZ\"}, \r\n                {\"name\": \"Myanmar\", \"code\": \"MM\"}, \r\n                {\"name\": \"Namibia\", \"code\": \"NA\"}, \r\n                {\"name\": \"Nauru\", \"code\": \"NR\"}, \r\n                {\"name\": \"Nepal\", \"code\": \"NP\"}, \r\n                {\"name\": \"Netherlands\", \"code\": \"NL\"}, \r\n                {\"name\": \"Netherlands Antilles\", \"code\": \"AN\"}, \r\n                {\"name\": \"New Caledonia\", \"code\": \"NC\"}, \r\n                {\"name\": \"New Zealand\", \"code\": \"NZ\"}, \r\n                {\"name\": \"Nicaragua\", \"code\": \"NI\"}, \r\n                {\"name\": \"Niger\", \"code\": \"NE\"}, \r\n                {\"name\": \"Nigeria\", \"code\": \"NG\"}, \r\n                {\"name\": \"Niue\", \"code\": \"NU\"}, \r\n                {\"name\": \"Norfolk Island\", \"code\": \"NF\"}, \r\n                {\"name\": \"Northern Mariana Islands\", \"code\": \"MP\"}, \r\n                {\"name\": \"Norway\", \"code\": \"NO\"}, \r\n                {\"name\": \"Oman\", \"code\": \"OM\"}, \r\n                {\"name\": \"Pakistan\", \"code\": \"PK\"}, \r\n                {\"name\": \"Palau\", \"code\": \"PW\"}, \r\n                {\"name\": \"Palestinian Territory, Occupied\", \"code\": \"PS\"}, \r\n                {\"name\": \"Panama\", \"code\": \"PA\"}, \r\n                {\"name\": \"Papua New Guinea\", \"code\": \"PG\"}, \r\n                {\"name\": \"Paraguay\", \"code\": \"PY\"}, \r\n                {\"name\": \"Peru\", \"code\": \"PE\"}, \r\n                {\"name\": \"Philippines\", \"code\": \"PH\"}, \r\n                {\"name\": \"Pitcairn\", \"code\": \"PN\"}, \r\n                {\"name\": \"Poland\", \"code\": \"PL\"}, \r\n                {\"name\": \"Portugal\", \"code\": \"PT\"}, \r\n                {\"name\": \"Puerto Rico\", \"code\": \"PR\"}, \r\n                {\"name\": \"Qatar\", \"code\": \"QA\"}, \r\n                {\"name\": \"Reunion\", \"code\": \"RE\"}, \r\n                {\"name\": \"Romania\", \"code\": \"RO\"}, \r\n                {\"name\": \"Russian Federation\", \"code\": \"RU\"}, \r\n                {\"name\": \"RWANDA\", \"code\": \"RW\"}, \r\n                {\"name\": \"Saint Helena\", \"code\": \"SH\"}, \r\n                {\"name\": \"Saint Kitts and Nevis\", \"code\": \"KN\"}, \r\n                {\"name\": \"Saint Lucia\", \"code\": \"LC\"}, \r\n                {\"name\": \"Saint Pierre and Miquelon\", \"code\": \"PM\"}, \r\n                {\"name\": \"Saint Vincent and the Grenadines\", \"code\": \"VC\"}, \r\n                {\"name\": \"Samoa\", \"code\": \"WS\"}, \r\n                {\"name\": \"San Marino\", \"code\": \"SM\"}, \r\n                {\"name\": \"Sao Tome and Principe\", \"code\": \"ST\"}, \r\n                {\"name\": \"Saudi Arabia\", \"code\": \"SA\"}, \r\n                {\"name\": \"Senegal\", \"code\": \"SN\"}, \r\n                {\"name\": \"Serbia and Montenegro\", \"code\": \"CS\"}, \r\n                {\"name\": \"Seychelles\", \"code\": \"SC\"}, \r\n                {\"name\": \"Sierra Leone\", \"code\": \"SL\"}, \r\n                {\"name\": \"Singapore\", \"code\": \"SG\"}, \r\n                {\"name\": \"Slovakia\", \"code\": \"SK\"}, \r\n                {\"name\": \"Slovenia\", \"code\": \"SI\"}, \r\n                {\"name\": \"Solomon Islands\", \"code\": \"SB\"}, \r\n                {\"name\": \"Somalia\", \"code\": \"SO\"}, \r\n                {\"name\": \"South Africa\", \"code\": \"ZA\"}, \r\n                {\"name\": \"South Georgia and the South Sandwich Islands\", \"code\": \"GS\"}, \r\n                {\"name\": \"Spain\", \"code\": \"ES\"}, \r\n                {\"name\": \"Sri Lanka\", \"code\": \"LK\"}, \r\n                {\"name\": \"Sudan\", \"code\": \"SD\"}, \r\n                {\"name\": \"Suriname\", \"code\": \"SR\"}, \r\n                {\"name\": \"Svalbard and Jan Mayen\", \"code\": \"SJ\"}, \r\n                {\"name\": \"Swaziland\", \"code\": \"SZ\"}, \r\n                {\"name\": \"Sweden\", \"code\": \"SE\"}, \r\n                {\"name\": \"Switzerland\", \"code\": \"CH\"}, \r\n                {\"name\": \"Syrian Arab Republic\", \"code\": \"SY\"}, \r\n                {\"name\": \"Taiwan, Province of China\", \"code\": \"TW\"}, \r\n                {\"name\": \"Tajikistan\", \"code\": \"TJ\"}, \r\n                {\"name\": \"Tanzania, United Republic of\", \"code\": \"TZ\"}, \r\n                {\"name\": \"Thailand\", \"code\": \"TH\"}, \r\n                {\"name\": \"Timor-Leste\", \"code\": \"TL\"}, \r\n                {\"name\": \"Togo\", \"code\": \"TG\"}, \r\n                {\"name\": \"Tokelau\", \"code\": \"TK\"}, \r\n                {\"name\": \"Tonga\", \"code\": \"TO\"}, \r\n                {\"name\": \"Trinidad and Tobago\", \"code\": \"TT\"}, \r\n                {\"name\": \"Tunisia\", \"code\": \"TN\"}, \r\n                {\"name\": \"Turkey\", \"code\": \"TR\"}, \r\n                {\"name\": \"Turkmenistan\", \"code\": \"TM\"}, \r\n                {\"name\": \"Turks and Caicos Islands\", \"code\": \"TC\"}, \r\n                {\"name\": \"Tuvalu\", \"code\": \"TV\"}, \r\n                {\"name\": \"Uganda\", \"code\": \"UG\"}, \r\n                {\"name\": \"Ukraine\", \"code\": \"UA\"}, \r\n                {\"name\": \"United Arab Emirates\", \"code\": \"AE\"}, \r\n                {\"name\": \"United Kingdom\", \"code\": \"GB\"}, \r\n                {\"name\": \"United States\", \"code\": \"US\"}, \r\n                {\"name\": \"United States Minor Outlying Islands\", \"code\": \"UM\"}, \r\n                {\"name\": \"Uruguay\", \"code\": \"UY\"}, \r\n                {\"name\": \"Uzbekistan\", \"code\": \"UZ\"}, \r\n                {\"name\": \"Vanuatu\", \"code\": \"VU\"}, \r\n                {\"name\": \"Venezuela\", \"code\": \"VE\"}, \r\n                {\"name\": \"Viet Nam\", \"code\": \"VN\"}, \r\n                {\"name\": \"Virgin Islands, British\", \"code\": \"VG\"}, \r\n                {\"name\": \"Virgin Islands, U.S.\", \"code\": \"VI\"}, \r\n                {\"name\": \"Wallis and Futuna\", \"code\": \"WF\"}, \r\n                {\"name\": \"Western Sahara\", \"code\": \"EH\"}, \r\n                {\"name\": \"Yemen\", \"code\": \"YE\"}, \r\n                {\"name\": \"Zambia\", \"code\": \"ZM\"}, \r\n                {\"name\": \"Zimbabwe\", \"code\": \"ZW\"} \r\n                ];\r\n    \r\n                var States = [\r\n                    {\r\n                        \"name\": \"Alabama\",\r\n                        \"abbreviation\": \"AL\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Alaska\",\r\n                        \"abbreviation\": \"AK\"\r\n                    },\r\n                    {\r\n                        \"name\": \"American Samoa\",\r\n                        \"abbreviation\": \"AS\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Arizona\",\r\n                        \"abbreviation\": \"AZ\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Arkansas\",\r\n                        \"abbreviation\": \"AR\"\r\n                    },\r\n                    {\r\n                        \"name\": \"California\",\r\n                        \"abbreviation\": \"CA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Colorado\",\r\n                        \"abbreviation\": \"CO\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Connecticut\",\r\n                        \"abbreviation\": \"CT\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Delaware\",\r\n                        \"abbreviation\": \"DE\"\r\n                    },\r\n                    {\r\n                        \"name\": \"District Of Columbia\",\r\n                        \"abbreviation\": \"DC\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Federated States Of Micronesia\",\r\n                        \"abbreviation\": \"FM\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Florida\",\r\n                        \"abbreviation\": \"FL\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Georgia\",\r\n                        \"abbreviation\": \"GA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Guam\",\r\n                        \"abbreviation\": \"GU\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Hawaii\",\r\n                        \"abbreviation\": \"HI\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Idaho\",\r\n                        \"abbreviation\": \"ID\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Illinois\",\r\n                        \"abbreviation\": \"IL\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Indiana\",\r\n                        \"abbreviation\": \"IN\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Iowa\",\r\n                        \"abbreviation\": \"IA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Kansas\",\r\n                        \"abbreviation\": \"KS\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Kentucky\",\r\n                        \"abbreviation\": \"KY\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Louisiana\",\r\n                        \"abbreviation\": \"LA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Maine\",\r\n                        \"abbreviation\": \"ME\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Marshall Islands\",\r\n                        \"abbreviation\": \"MH\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Maryland\",\r\n                        \"abbreviation\": \"MD\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Massachusetts\",\r\n                        \"abbreviation\": \"MA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Michigan\",\r\n                        \"abbreviation\": \"MI\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Minnesota\",\r\n                        \"abbreviation\": \"MN\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Mississippi\",\r\n                        \"abbreviation\": \"MS\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Missouri\",\r\n                        \"abbreviation\": \"MO\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Montana\",\r\n                        \"abbreviation\": \"MT\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Nebraska\",\r\n                        \"abbreviation\": \"NE\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Nevada\",\r\n                        \"abbreviation\": \"NV\"\r\n                    },\r\n                    {\r\n                        \"name\": \"New Hampshire\",\r\n                        \"abbreviation\": \"NH\"\r\n                    },\r\n                    {\r\n                        \"name\": \"New Jersey\",\r\n                        \"abbreviation\": \"NJ\"\r\n                    },\r\n                    {\r\n                        \"name\": \"New Mexico\",\r\n                        \"abbreviation\": \"NM\"\r\n                    },\r\n                    {\r\n                        \"name\": \"New York\",\r\n                        \"abbreviation\": \"NY\"\r\n                    },\r\n                    {\r\n                        \"name\": \"North Carolina\",\r\n                        \"abbreviation\": \"NC\"\r\n                    },\r\n                    {\r\n                        \"name\": \"North Dakota\",\r\n                        \"abbreviation\": \"ND\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Northern Mariana Islands\",\r\n                        \"abbreviation\": \"MP\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Ohio\",\r\n                        \"abbreviation\": \"OH\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Oklahoma\",\r\n                        \"abbreviation\": \"OK\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Oregon\",\r\n                        \"abbreviation\": \"OR\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Palau\",\r\n                        \"abbreviation\": \"PW\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Pennsylvania\",\r\n                        \"abbreviation\": \"PA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Puerto Rico\",\r\n                        \"abbreviation\": \"PR\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Rhode Island\",\r\n                        \"abbreviation\": \"RI\"\r\n                    },\r\n                    {\r\n                        \"name\": \"South Carolina\",\r\n                        \"abbreviation\": \"SC\"\r\n                    },\r\n                    {\r\n                        \"name\": \"South Dakota\",\r\n                        \"abbreviation\": \"SD\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Tennessee\",\r\n                        \"abbreviation\": \"TN\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Texas\",\r\n                        \"abbreviation\": \"TX\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Utah\",\r\n                        \"abbreviation\": \"UT\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Vermont\",\r\n                        \"abbreviation\": \"VT\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Virgin Islands\",\r\n                        \"abbreviation\": \"VI\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Virginia\",\r\n                        \"abbreviation\": \"VA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Washington\",\r\n                        \"abbreviation\": \"WA\"\r\n                    },\r\n                    {\r\n                        \"name\": \"West Virginia\",\r\n                        \"abbreviation\": \"WV\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Wisconsin\",\r\n                        \"abbreviation\": \"WI\"\r\n                    },\r\n                    {\r\n                        \"name\": \"Wyoming\",\r\n                        \"abbreviation\": \"WY\"\r\n                    }\r\n                ];\r\n    \r\n                var BaseUrl = EMIService.BaseUrl;\r\n    \r\n                _HandleStripeToken = {};\r\n    \r\n                var _Auth0Identifier = \"\";\r\n    \r\n                var _HandleStripeToken = function(data){\r\n                    return $http.post(BaseUrl + 'api/Payments/Capture', data);\r\n                };\r\n\r\n                var _RegisterUsers = function(data){\r\n                    return $http.post(BaseUrl + 'api/Users', data);\r\n                };\r\n    \r\n                return {\r\n                    States: States,\r\n                    Countries: Countries,\r\n                    UserId: _UserId,\r\n                    HandleStripeToken: _HandleStripeToken,\r\n                    Auth0Identifier: _Auth0Identifier,\r\n                    RegisterUsers: _RegisterUsers\r\n                };\r\n        }\r\n    \r\n    })();","(function(){\r\n    \r\n        'use strict';\r\n    \r\n        angular.module('EmediCodesApplication')\r\n        .controller('TreatmentSummaryCtrl', TreatmentCodesSummaryController);\r\n    \r\n        TreatmentCodesSummaryController.$inject = ['$scope', 'EMIService', 'toaster', 'authService'];\r\n    \r\n        function TreatmentCodesSummaryController ($scope, EMIService, toaster, authService) {\r\n            var defaultRequestHeaders = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n                }\r\n            };\r\n        \r\n            authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n\r\n            var TreatmentSetting = EMIService.serviceChosenTreatmentSetting;\r\n            var ModalityID = EMIService.serviceChosenModalityID;\r\n              \r\n            if(TreatmentSetting != undefined && TreatmentSetting != null && ModalityID != undefined && ModalityID != null)   \r\n                CalculateTreatments(TreatmentSetting, ModalityID);\r\n        \r\n\r\n            $scope.TreatmentSetting = EMIService.serviceChosenTreatmentSetting;\r\n        \r\n            $scope.toggleTreatmentAmount = function(index, action){\r\n                var currentRow = $scope.TreatmentCodes[index];\r\n                if(action === \"plus\"){\r\n                    currentRow.number_of_treatments++;\r\n                    currentRow.treatment_dollar_amount = currentRow.opps_payment_rate * currentRow.number_of_treatments;\r\n                    $scope.TreatmentCodes[index] = currentRow;\r\n                }\r\n                else if(action === \"minus\"){\r\n                    currentRow.treatment_dollar_amount = currentRow.treatment_dollar_amount - currentRow.opps_payment_rate;\r\n                    currentRow.number_of_treatments--;\r\n                    $scope.TreatmentCodes[index] = currentRow;\r\n                }\r\n            };\r\n\r\n            function CalculateTreatments(TreatmentSetting, ModalityID) {\r\n                var apiResource = \"\";\r\n    \r\n                if(TreatmentSetting === undefined || \r\n                    TreatmentSetting === null || \r\n                    TreatmentSetting === \"\" ) {\r\n                        toaster.error('Please select a treatment setting to continue.');\r\n                    }\r\n                    else if(TreatmentSetting.length === 0){\r\n                        toaster.error('Please select a treatment setting to continue.');\r\n                    }\r\n                    else {\r\n                        if(TreatmentSetting == \"Hospital\"){\r\n                            apiResource = \"HospitalTreatmentCodes\";\r\n                            EMIService.GetTreatmentCodesByModality(ModalityID, apiResource, defaultRequestHeaders)\r\n                            .then(function(response){\r\n                                EMIService.serviceTreatmentCodes = response;\r\n                                $scope.TreatmentCodes = EMIService.serviceTreatmentCodes.data;\r\n                            });\r\n                        }\r\n                        else if(TreatmentSetting == \"Global\"){\r\n                            toaster.error('Feature Not Implemented');\r\n                        }\r\n                        else if(TreatmentSetting == \"Professional\"){\r\n                            toaster.error('Feature Not Implemented');\r\n                        }\r\n                        else if(TreatmentSetting == \"Technical\"){\r\n                            toaster.error('Feature Not Implemented');\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n    })();","(function(){\r\n\r\n    angular.module('EmediCodesApplication')\r\n    .controller('InvalidSubscriptionCtrl', InvalidSubscriptionController);\r\n\r\n    InvalidSubscriptionController.$inject = ['$scope', 'authService', 'EMIService', 'toaster', '$state'];\r\n\r\n    function InvalidSubscriptionController($scope, authService, EMIService, toaster, $state) {\r\n        var defaultRequestHeaders = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n            }\r\n        };\r\n    \r\n        authService.ValidateAuthorization(defaultRequestHeaders.headers);\r\n\r\n        $scope.goToPayment = function() {\r\n            $state.go('payment');\r\n        };\r\n\r\n        $scope.contactSupport = function(){\r\n            $state.go('app.bugs');\r\n        };\r\n    }\r\n\r\n})();","","(function(){\r\n\r\n    angular.module('EmediCodesApplication')\r\n    .controller('DeleteCaseModalCtrl', DeleteCaseModalController)\r\n\r\n    DeleteCaseModalController.$inject = ['$scope', 'EMIService', 'authService', '$uibModalInstance', 'toaster'];\r\n\r\n    function DeleteCaseModalController($scope, EMIService, authService, $uibModalInstance, toaster) {\r\n\r\n        var defaultRequestHeaders = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem('id_token')\r\n            }\r\n        };\r\n\r\n        $scope.DeleteCase = function(){\r\n            var CaseID = EMIService.deleteSelectedCaseID;\r\n\r\n            EMIService.DeleteCase(CaseID, defaultRequestHeaders)\r\n            .success(function (response) {\r\n                $uibModalInstance.dismiss('cancel');\r\n                toaster.pop('success', 'Case Successfully Deleted');\r\n            }).catch(function (error) {\r\n                toaster.pop('error', 'An Error Occurred On The Server.');\r\n            });\r\n        };\r\n\r\n        $scope.Cancel = function(){\r\n            $uibModalInstance.dismiss('cancel');\r\n        };\r\n\r\n    }\r\n\r\n})();"]}