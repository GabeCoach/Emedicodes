DATETIME: 12/18/2017 2:22:11 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:22:11 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:22:11 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:22:29 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:22:29 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:23:26 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:24:55 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:24:55 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:24:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:29 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:29 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:29 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:34 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:37 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:37 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:37 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:37 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:37 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:37 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:37 PM; ROUTE: api/MPFS/{CPTCode}/GlobalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:38 PM; ROUTE: api/MPFS/{CPTCode}/ProfessionalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:41 PM; ROUTE: api/MPFS/{CPTCode}/TechnicalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:41 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:25:49 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:08 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:08 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:11 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:15 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:19 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:19 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:19 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:19 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:19 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:19 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:19 PM; ROUTE: api/MPFS/{CPTCode}/GlobalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:20 PM; ROUTE: api/MPFS/{CPTCode}/ProfessionalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:25 PM; ROUTE: api/MPFS/{CPTCode}/TechnicalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:25 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:25 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:25 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:47 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:48 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:28:48 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:29:01 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Input string was not in a correct format.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:29:01 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Input string was not in a correct format.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:29:02 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Input string was not in a correct format.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:29:13 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Input string was not in a correct format.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:29:14 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Input string was not in a correct format.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:29:14 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Input string was not in a correct format.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:29:48 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Input string was not in a correct format.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:29:52 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Input string was not in a correct format.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:30:19 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Input string was not in a correct format.; INNER EXCEPTION: 
DATETIME: 12/18/2017 2:58:19 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:58:25 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:59:35 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 2:59:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:14 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:22 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:23 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:23 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:23 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:23 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:23 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:28 PM; ROUTE: api/MPFS/{CPTCode}/TechnicalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:28 PM; ROUTE: api/MPFS/{CPTCode}/ProfessionalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:52 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:01:55 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:10:17 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:10:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:10:44 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:10:44 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:10:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:10:46 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:10:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:10:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:10:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:10:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:30 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:36 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:36 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:42 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:42 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:43 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:43 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:49 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:49 PM; ROUTE: api/MPFS/{CPTCode}/GlobalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:49 PM; ROUTE: api/MPFS/{CPTCode}/ProfessionalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:49 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:11:51 PM; ROUTE: api/MPFS/{CPTCode}/TechnicalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:11 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:11 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:12 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:23 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:23 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:23 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:27 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:27 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:28 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:31 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:32 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:32 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:36 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:36 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:36 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:39 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:39 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:39 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:42 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:42 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:12:42 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:44:55 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:44:55 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:44:56 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:44:56 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:44:57 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:44:57 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:00 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:21 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:21 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:22 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:36 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:42 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:42 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:42 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:42 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:42 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:43 PM; ROUTE: api/MPFS/{CPTCode}/GlobalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:43 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:43 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:43 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:43 PM; ROUTE: api/MPFS/{CPTCode}/TechnicalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:47 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:47 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:47 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:50 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:50 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:50 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:53 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:53 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:53 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:56 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:56 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:45:56 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:46:02 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:46:02 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:46:02 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:08 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:08 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:15 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:21 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:21 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:23 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:32 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:35 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:35 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:35 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:35 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:35 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:35 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:36 PM; ROUTE: api/MPFS/{CPTCode}/GlobalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:36 PM; ROUTE: api/MPFS/{CPTCode}/ProfessionalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:36 PM; ROUTE: api/MPFS/{CPTCode}/TechnicalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:36 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:36 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:50:36 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:32 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:38 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:38 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:38 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:42 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:43 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:43 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:43 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:54:56 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:00 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:04 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:04 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:04 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:04 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:04 PM; ROUTE: api/MPFS/{CPTCode}/GlobalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:04 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:04 PM; ROUTE: api/MPFS/{CPTCode}/TechnicalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:04 PM; ROUTE: api/MPFS/{CPTCode}/ProfessionalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:05 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:05 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:15 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:15 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:16 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:19 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:19 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:20 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:51 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:51 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:55:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:53 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:57 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:57 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:57 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:57 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:57 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:57 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:57 PM; ROUTE: api/MPFS/{CPTCode}/GlobalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:58 PM; ROUTE: api/MPFS/{CPTCode}/TechnicalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:57:58 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:58:58 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:58:58 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:58:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:15 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:15 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:58 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:58 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 3:59:59 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:00:02 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:00:02 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:00:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:00:03 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:00:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:00:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:00:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:00:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:38 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:38 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:39 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:47 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:50 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:50 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:50 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:50 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:51 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:51 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:51 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:51 PM; ROUTE: api/MPFS/{CPTCode}/GlobalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:51 PM; ROUTE: api/MPFS/{CPTCode}/TechnicalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:51 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:02:51 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:08 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:09 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:11 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:11 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:11 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:15 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:15 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:15 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:17 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:17 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:18 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:03:59 PM; ROUTE: api/WageIndex/Calculate; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:04:06 PM; ROUTE: api/WageIndex/Calculate; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 4:04:10 PM; ROUTE: api/WageIndex/Calculate; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:32:59 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:33:00 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:33:51 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:33:51 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:33:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:33:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:34:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:34:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:34:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:34:02 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:20 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:20 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:20 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:25 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:25 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:25 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:35:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:37:38 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:37:38 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:37:38 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:37:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:37:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:37:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:37:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:37:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:38:46 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:38:46 PM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:38:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:38:47 PM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:38:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:38:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:38:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:38:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:38:56 PM; ROUTE: api/Diseases/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:00 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:00 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:00 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:02 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:04 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:07 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:08 PM; ROUTE: api/Modalities/{DiseaseSite}/DiseaseSiteApplicableModalities; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:10 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:11 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:39:13 PM; ROUTE: api/TreatmentCodeCalculator/{ModalityID}/HospitalTreatmentCodes; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:31 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:31 PM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:31 PM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:37 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:37 PM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:38 PM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:59 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:59 PM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:40:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:00 PM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:27 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:27 PM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:27 PM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:28 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:30 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:30 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:30 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:41:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:06 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:10 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:12 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:12 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:12 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:13 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:32 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:36 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/18/2017 5:45:36 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:12 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:28 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:28 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:30 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:30 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:31 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:19:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:06 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:23:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:26:50 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:26:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:26:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:26:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:26:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:26:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:26:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:26:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:27:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:27:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:27:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:00 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:44:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:54 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:46:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:36 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:49:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:10 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:52:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:06 PM; ROUTE: api/Case; METHOD: DELETE; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:13 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 12/20/2017 1:54:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:35:27 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:37:57 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:04 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:08 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:09 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:10 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:11 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:12 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:12 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:12 AM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:14 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:14 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:38:14 AM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:40:12 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:41:00 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:41:18 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:41:19 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:41:19 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:41:20 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:41:20 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:45:53 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:45:59 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:01 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:02 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:02 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:02 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:02 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:03 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:03 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:03 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:03 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:12 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:13 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:13 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:13 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:13 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:13 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:13 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:13 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:14 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 11:46:14 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:41:29 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:41:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:42:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:42:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:42:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:42:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:42:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:42:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:43:48 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:44:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:44:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:44:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:44:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:44:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:44:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:44:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:44:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:44:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:44:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:48:25 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:48:26 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:48:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 6:48:27 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:53:38 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:55:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:55:35 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:28 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:28 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:28 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:35 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:35 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 7:56:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:40 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:06:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:18 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:21 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:41 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:53 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:56 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:56 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:56 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:57 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:57 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:57 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:59 PM; ROUTE: api/MPFS/{CPTCode}/GlobalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:34:59 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:41:52 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:41:52 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:41:53 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:41:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:01 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:04 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:04 PM; ROUTE: api/MPFS/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:04 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:04 PM; ROUTE: api/CCIEdits/{CPTCode}/CPT; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:04 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:04 PM; ROUTE: api/MUEInformation/{CPTCode}/CPT/; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:04 PM; ROUTE: api/MPFS/{CPTCode}/GlobalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:05 PM; ROUTE: api/MPFS/{CPTCode}/ProfessionalRVUCalculation; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:05 PM; ROUTE: api/MPFS/TechnicalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:05 PM; ROUTE: api/MPFS/GlobalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/5/2018 9:42:05 PM; ROUTE: api/MPFS/ProfessionalPaymentRate; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:27 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:53 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:13:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:05 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:05 PM; ROUTE: api/GPCI; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:12 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:26 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:26 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:30 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:14:38 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:04 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:06 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:15:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:16:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:16:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:42 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:57 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:17:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:18:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:14 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:51 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:20:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:11 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:32 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:21:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:00 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:14 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:22:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:53 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:28:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:05 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:06 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:29:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:02 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:14 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:14 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:27 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:28 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:28 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:29 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:29 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:30 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:30 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:30 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:30 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:30 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:30 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:31 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:31 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:31:43 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:14 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:33:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:50 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:35:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:22 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:56 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:36:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:37:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:36 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:37 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:37 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:43 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:38:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:07 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:14 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:14 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:46 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:49 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:49 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:49 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:50 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:50 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:39:50 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:15 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:43 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:40:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:35 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:36 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:36 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:36 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:36 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:37 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:37 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:42:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:14 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:37 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:56 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:43:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:09 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:23 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:25 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:25 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:44:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:49 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:51 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:51 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:46:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:40 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:43 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:43 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:43 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:47:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:21 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:25 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:25 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:48:49 PM; METHOD: GetStripeCustomerId; ERROR: TRUE; EXCEPTION: An error occurred while executing the command definition. See the inner exception for details.; INNER EXCEPTION: System.Data.SqlClient.SqlException (0x80131904): A transport-level error has occurred when receiving results from the server. (provider: Session Provider, error: 19 - Physical connection is not usable)
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at System.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at System.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at System.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at System.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   at System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.Reader(DbCommand command, DbCommandInterceptionContext interceptionContext)
   at System.Data.Entity.Core.EntityClient.Internal.EntityCommandDefinition.ExecuteStoreCommands(EntityCommand entityCommand, CommandBehavior behavior)
ClientConnectionId:6f992f63-bb1f-43c4-a5af-b92324f73759
Error Number:-1,State:0,Class:20; STACKTRACE:    at System.Data.Entity.Core.EntityClient.Internal.EntityCommandDefinition.ExecuteStoreCommands(EntityCommand entityCommand, CommandBehavior behavior)
   at System.Data.Entity.Core.Objects.Internal.ObjectQueryExecutionPlan.Execute[TResultType](ObjectContext context, ObjectParameterCollection parameterValues)
   at System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)
   at System.Data.Entity.Core.Objects.ObjectQuery`1.<>c__DisplayClass7.<GetResults>b__5()
   at System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)
   at System.Data.Entity.Core.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   at System.Data.Entity.Core.Objects.ObjectQuery`1.<System.Collections.Generic.IEnumerable<T>.GetEnumerator>b__0()
   at System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()
   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)
   at EmediCodesWebApplication.Repository.UserRepository.GetStripeCustomerId(Int32 UserId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\UserRepository.cs:line 76
DATETIME: 1/7/2018 4:48:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:00 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:56 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:49:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:51 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:50:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:07 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:19 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:22 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:37 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:51:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:02 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:06 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:06 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:06 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:06 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:06 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/7/2018 4:56:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:52:56 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:26 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:26 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:26 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:27 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:27 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:27 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:27 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:27 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:27 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:27 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:28 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:28 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:28 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:28 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:28 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:29 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:29 AM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:29 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:29 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:29 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 11:53:33 AM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:37 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:37 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:43 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:43 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:48 PM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:52 PM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:53 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:53 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:53 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:07:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:23 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:23 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:24 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:25 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:25 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:28 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:30 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:31 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:31 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:32 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:32 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:35 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:35 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:08:35 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:27 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:27 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:28 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:29 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:30 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:30 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:31 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:31 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:31 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:32 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:32 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:32 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:11:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:17:38 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:18:05 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:18:06 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:18:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:07 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:19:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:20:00 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:20:18 PM; ROUTE: api/MPFS/{CPTCode}/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:20:25 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:20:25 PM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:20:25 PM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:20:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:20:48 PM; ROUTE: api/Diseases/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:21:02 PM; ROUTE: api/Diseases/Search; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:21:08 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:21:08 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:21:08 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:21:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:02 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:06 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:37 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:37 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:42 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:43 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:44 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:49:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:12 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:12 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:12 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:14 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:14 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:14 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:14 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:18 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:19 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:19 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:22 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:22 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:22 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:50:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:16 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:50 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:50 PM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:50 PM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:50 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:52 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:52 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:55 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:55 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:56 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:52:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:01 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:01 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:01 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:43 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:43 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:45 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:53:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:47 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:47 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:49 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:49 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:50 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:50 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:50 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:50 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:50 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:50 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:51 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:56:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:21 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:22 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:22 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:22 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:35 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:35 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:35 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:36 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:36 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:36 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:36 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:36 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:36 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:37 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:37 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 12:58:37 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:31 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:31 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:31 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:32 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:32 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:32 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:05:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:06:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:46 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/11/2018 1:07:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:27:18 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:27:48 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:16 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:17 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:17 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:17 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:18 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:18 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:18 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:19 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:19 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:19 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:20 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:22 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:22 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:22 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:22 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:22 AM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:22 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:22 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 10:28:25 AM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:02:12 PM; ROUTE: api/BugReport/{UserId}; METHOD: GET; IP_ADDRESS: ::1; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: 
DATETIME: 1/12/2018 12:07:38 PM; ROUTE: api/BugReport/{UserId}; METHOD: GET; IP_ADDRESS: ::1; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: 
DATETIME: 1/12/2018 12:38:46 PM; ROUTE: api/BugReport/{UserId}; METHOD: GET; IP_ADDRESS: ::1; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: 
DATETIME: 1/12/2018 12:58:49 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:58:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:58:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:58:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:58:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:58:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:58:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:58:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:58:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:58:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:59:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:59:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:59:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:59:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:59:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:59:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:59:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:59:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 12:59:08 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:03:57 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:03 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:04:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:43 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:48 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:48 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:49 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:50 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:51 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:51 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:51 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:51 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:08:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:04 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:43 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:10:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:11:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:11:03 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:03 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:05 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:05 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:06 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:20 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:21 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:22 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:12:59 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:06 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:13:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:18:27 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:19:22 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:19:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:19:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:19:49 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:20:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:20:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:20:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:20:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:20:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:20:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:20:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:23:17 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:23:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:23:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:23:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:23:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:23:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:23:47 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:23:50 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:23:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:24:04 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:24:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:24:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:24:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:24:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:24:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:24:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:24:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:26:14 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:26:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:26:17 PM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:26:31 PM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:26:42 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:26:42 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:26:43 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/12/2018 1:26:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:27:39 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:28:30 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:28 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:28 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:28 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:29 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:29 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:29:29 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:32:38 PM; ROUTE: api/BugReport/{UserId}; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:50:47 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:51:42 PM; ROUTE: api/BugReport/{UserId}; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:51:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:13 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:18 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:19 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:20 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:21 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:51 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:54 PM; ROUTE: api/BugReport/{UserId}; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:55 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:56 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:52:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:34 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:39 PM; ROUTE: api/BugReport/{UserId}; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:53:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:50 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:58 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:54:59 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:55:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:55:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:55:24 PM; ROUTE: api/BugReport/{UserId}; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:13 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:14 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:14 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:16 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:56:34 PM; ROUTE: api/BugReport/{UserId}; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:22 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:24 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:25 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:25 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:25 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:57:42 PM; ROUTE: api/BugReport/{UserId}; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:31 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:32 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:33 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:33 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:34 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:35 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:35 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/13/2018 8:58:46 PM; ROUTE: api/BugReport/{UserId}; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:36:23 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:38:24 AM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/15/2018 8:38:24 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:25 AM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/15/2018 8:38:25 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:25 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:25 AM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/15/2018 8:38:26 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:26 AM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/15/2018 8:38:26 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:26 AM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/15/2018 8:38:26 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:26 AM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/15/2018 8:38:26 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:26 AM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/15/2018 8:38:26 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:27 AM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/15/2018 8:38:27 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:27 AM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/15/2018 8:38:27 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:27 AM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/15/2018 8:38:27 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:27 AM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/15/2018 8:38:27 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:27 AM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/15/2018 8:38:27 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:28 AM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/15/2018 8:38:28 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:28 AM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/15/2018 8:38:28 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:28 AM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/15/2018 8:38:28 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:38:28 AM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/15/2018 8:38:28 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_C5wz7vuxL7ooaM; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/15/2018 8:40:07 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:41:47 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:41:55 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:01 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:01 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:02 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:02 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:02 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:02 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:02 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:02 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:02 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:02 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:02 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:03 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:03 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:03 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:08 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:08 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:42 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:47 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:47 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:55 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:58 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:59 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:59 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:42:59 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:43:57 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:43:58 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:08 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:09 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:09 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:10 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:12 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:12 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:14 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:15 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:15 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:15 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:15 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:15 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:15 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:16 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:17 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:18 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:18 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:19 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:19 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:21 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:21 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:21 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:21 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:44:21 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:45:54 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:02 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:49 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:49 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:49 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:49 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:50 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:50 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:50 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:50 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:50 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:50 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:50 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:50 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:51 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:51 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:53 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:53 AM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:54 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:54 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:55 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:55 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:55 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:56 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:56 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:57 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 8:46:57 AM; ROUTE: api/Payments/{UserId}/FreeTrialTime; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 10:31:05 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 10:31:06 AM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 10:31:17 AM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 10:31:18 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/15/2018 10:31:42 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 11:18:03 AM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 11:18:05 AM; ROUTE: api/Diseases/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 11:18:18 AM; ROUTE: api/Diseases/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/15/2018 11:18:18 AM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1
DATETIME: 1/16/2018 6:38:37 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 6:38:52 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 6:38:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:52 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 6:38:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:53 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 6:38:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:53 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 6:38:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:53 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 6:38:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:53 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 6:38:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:53 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 6:38:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:53 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 6:38:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:54 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 6:38:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:54 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 6:38:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:54 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 6:38:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:54 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 6:38:54 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:54 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 6:38:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:54 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 6:38:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:54 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 6:38:54 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:55 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 6:38:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 6:38:55 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 6:38:55 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:00:58 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:01:15 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:01:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:15 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:15 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:01:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:15 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:01:15 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:16 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:01:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:16 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:01:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:16 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:01:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:16 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:01:16 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:17 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:01:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:17 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:01:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:17 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:01:17 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:17 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:01:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:17 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:01:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:17 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:01:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:17 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:01:17 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:18 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:01:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:18 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:01:18 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:01:19 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:01:19 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:04:02 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:13:55 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:13:56 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:13:56 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:13:58 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:13:58 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:01 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:14:03 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:04 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:06 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:07 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:07 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:07 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:07 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:08 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:08 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:08 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:08 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:08 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:33 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:14:33 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:14:34 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:34 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:36 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:36 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:36 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:36 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:37 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:37 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:37 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:38 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:38 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:38 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:38 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:38 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:38 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:39 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:39 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:40 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:41 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:41 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:41 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:42 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:42 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:42 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:14:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:14:43 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:14:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:08 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:15:08 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:15:09 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:10 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:10 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:10 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:10 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:10 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:11 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:11 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:11 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:11 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:11 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:11 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:11 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:11 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:11 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:12 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:12 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:12 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:12 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:12 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:12 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:12 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:12 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:12 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:13 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:13 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:22 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:15:35 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:15:35 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:15:36 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:36 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:36 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:15:38 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:39 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:39 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:39 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:39 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:39 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:39 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:39 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:39 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:39 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:40 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:40 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:40 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:40 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:40 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:40 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:40 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:15:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:15:40 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:15:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:06 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:19:06 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:19:06 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:19:06 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:07 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:07 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:07 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:07 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:07 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:07 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:07 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:07 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:07 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:08 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:08 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:08 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:08 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:08 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:08 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:08 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:08 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:08 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:08 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:09 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:09 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:09 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:09 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:09 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:24 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:19:24 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:19:24 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:25 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:19:25 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:25 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:25 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:26 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:26 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:26 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:26 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:26 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:26 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:26 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:27 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:27 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:27 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:27 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:27 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:27 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:19:27 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:27 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:27 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:27 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:19:29 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:19:29 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:37 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:22:37 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:22:37 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:22:37 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:39 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:22:39 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:39 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:22:39 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:40 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:22:40 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:40 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:22:40 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:41 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:22:41 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:41 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:22:41 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:42 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:22:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:42 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:22:42 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:42 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:22:42 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:43 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:22:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:43 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:22:43 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:43 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:22:43 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:44 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:22:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:44 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:22:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:44 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:22:44 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:44 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:22:44 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:45 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:22:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:22:45 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:22:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: 127.0.0.1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:50 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:51 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:51 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:23:52 PM; METHOD: RetrieveMPFSWithPaging; ERROR: TRUE; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.Repository.MPFSRepository.RetrieveMPFSWithPaging(PagingModel oPager) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Repository\MPFSRepository.cs:line 67
DATETIME: 1/16/2018 7:23:52 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: 127.0.0.1; EXCEPTION: Object reference not set to an instance of an object.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:33:58 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:41:07 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:41:23 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:41:23 PM; LOGGING EXCEPTION: The process cannot access the file 'C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\LogFile.txt' because it is being used by another process.; LOGGING INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:23 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:23 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:23 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:41:23 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:41:24 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:45 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:41:45 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:41:45 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:45 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:46 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:41:46 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:41:46 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:52 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:41:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:52 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:41:52 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:52 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:41:52 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:53 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:41:53 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:41:53 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:53 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:41:53 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:56 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:41:56 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:41:57 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:57 PM; LOGGING EXCEPTION: The process cannot access the file 'C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\LogFile.txt' because it is being used by another process.; LOGGING INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:57 PM; LOGGING EXCEPTION: The process cannot access the file 'C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\LogFile.txt' because it is being used by another process.; LOGGING INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:41:57 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 7:41:57 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:44:05 PM; ROUTE: api/Validator; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:44:05 PM; ROUTE: api/MPFS/Count; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:44:06 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 7:44:06 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 7:44:09 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:45:28 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:45:30 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 7:45:32 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 8:52:55 PM; ROUTE: api/MPFS/PageRecords; METHOD: GET; IP_ADDRESS: ::1
DATETIME: 1/16/2018 8:53:00 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 8:53:00 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:00 PM; LOGGING EXCEPTION: The process cannot access the file 'C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\LogFile.txt' because it is being used by another process.; LOGGING INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:00 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:01 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 8:53:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:01 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 8:53:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:01 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 8:53:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:01 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 8:53:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:01 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 8:53:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:01 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 8:53:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:01 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 8:53:01 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:01 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 8:53:01 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:02 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 8:53:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:02 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 8:53:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:02 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 8:53:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:02 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 8:53:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:02 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 8:53:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:02 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 8:53:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:02 PM; METHOD: CheckCustomerSubscription; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckCustomerSubscription(String stripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 156
DATETIME: 1/16/2018 8:53:02 PM; ROUTE: api/Payments/{UserId}/CheckSubscription; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/16/2018 8:53:02 PM; METHOD: CheckFreeTrialPeriod; ERROR: TRUE; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Get(String customerId, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CheckFreeTrialPeriod(String sStripeCustomerId) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 189
DATETIME: 1/16/2018 8:53:02 PM; ROUTE: api/Payments/{UserId}/FreeTrialPeriod; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such customer: cus_By47VNLjHM6g48; a similar object exists in test mode, but a live mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/18/2018 10:30:31 AM; METHOD: CreateAuth0User; ERROR: TRUE; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: ; STACKTRACE:    at System.Net.HttpWebRequest.GetResponse()
   at EmediCodesWebApplication.Auth0Connector.Auth0Users.CreateAuth0User(String Email, String Password) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Auth0Connector\Auth0Users.cs:line 47
DATETIME: 1/18/2018 10:30:31 AM; ROUTE: api/Users; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: 
DATETIME: 1/18/2018 10:37:33 AM; METHOD: CreateStripeCustomer; ERROR: TRUE; EXCEPTION: No such plan: 2; a similar object exists in live mode, but a test mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Create(StripeCustomerCreateOptions createOptions, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CreateStripeCustomer(String sEmail, String sToken, String sInputDiscountCode) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 42
DATETIME: 1/18/2018 10:37:33 AM; ROUTE: api/Payments; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such plan: 2; a similar object exists in live mode, but a test mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/18/2018 11:30:24 AM; METHOD: CreateAuth0User; ERROR: TRUE; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: ; STACKTRACE:    at System.Net.HttpWebRequest.GetResponse()
   at EmediCodesWebApplication.Auth0Connector.Auth0Users.CreateAuth0User(String sEmail, String sPassword) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Auth0Connector\Auth0Users.cs:line 49
DATETIME: 1/18/2018 11:31:47 AM; ROUTE: api/Users; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: 
DATETIME: 1/18/2018 11:36:53 AM; METHOD: CreateAuth0User; ERROR: TRUE; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: ; STACKTRACE:    at System.Net.HttpWebRequest.GetResponse()
   at EmediCodesWebApplication.Auth0Connector.Auth0Users.CreateAuth0User(String sEmail, String sPassword) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Auth0Connector\Auth0Users.cs:line 49
DATETIME: 1/18/2018 11:36:57 AM; ROUTE: api/Users; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: 
DATETIME: 1/18/2018 11:46:38 AM; METHOD: CreateAuth0User; ERROR: TRUE; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: ; STACKTRACE:    at System.Net.HttpWebRequest.GetResponse()
   at EmediCodesWebApplication.Auth0Connector.Auth0Users.CreateAuth0User(String sEmail, String sPassword) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\Auth0Connector\Auth0Users.cs:line 49
DATETIME: 1/18/2018 11:47:48 AM; ROUTE: api/Users; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: The remote server returned an error: (400) Bad Request.; INNER EXCEPTION: 
DATETIME: 1/18/2018 11:54:44 AM; METHOD: CreateStripeCustomer; ERROR: TRUE; EXCEPTION: No such plan: 2; a similar object exists in live mode, but a test mode key was used to make this request.; INNER EXCEPTION: ; STACKTRACE:    at Stripe.Infrastructure.Requestor.ExecuteRequest(HttpRequestMessage requestMessage)
   at Stripe.StripeCustomerService.Create(StripeCustomerCreateOptions createOptions, StripeRequestOptions requestOptions)
   at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CreateStripeCustomer(String sEmail, String sToken, String sInputDiscountCode) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 42
DATETIME: 1/18/2018 11:54:54 AM; ROUTE: api/Payments; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: No such plan: 2; a similar object exists in live mode, but a test mode key was used to make this request.; INNER EXCEPTION: 
DATETIME: 1/18/2018 12:27:45 PM; Invalid Coupon Code
DATETIME: 1/18/2018 12:27:46 PM; METHOD: CreateStripeCustomer; ERROR: TRUE; EXCEPTION: Incorrect Coupon Code; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CreateStripeCustomer(String sEmail, String sToken, String sInputDiscountCode) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 44
DATETIME: 1/18/2018 12:27:47 PM; ROUTE: api/Payments; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Incorrect Coupon Code; INNER EXCEPTION: 
DATETIME: 1/18/2018 12:33:04 PM; Invalid Coupon Code
DATETIME: 1/18/2018 12:33:08 PM; METHOD: CreateStripeCustomer; ERROR: TRUE; EXCEPTION: Incorrect Coupon Code; INNER EXCEPTION: ; STACKTRACE:    at EmediCodesWebApplication.StripeConnector.StripeCustomersHandler.CreateStripeCustomer(String sEmail, String sToken, String sInputDiscountCode) in C:\VSCode\EmediCodesWebApplication\EmediCodesWebApplication\StripeConnector\StripeCustomersHandler.cs:line 44
DATETIME: 1/18/2018 12:33:08 PM; ROUTE: api/Payments; METHOD: POST; IP_ADDRESS: ::1; EXCEPTION: Incorrect Coupon Code; INNER EXCEPTION: 
DATETIME: 1/18/2018 12:54:10 PM; Verification email sent: {
  "type": "verification_email",
  "status": "pending",
  "created_at": "2018-01-18T18:54:10.785Z",
  "id": "job_M5YwORTPMbOuDVBK"
}
DATETIME: 1/18/2018 12:54:11 PM; ROUTE: api/Payments/Capture; METHOD: POST; IP_ADDRESS: ::1
